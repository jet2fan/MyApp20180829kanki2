package com.example.yo.myapp20180829kanki2;

public class A01縦断H20Class{
//'既定値の定数
	private final int C屈曲 = 5;//4;+1 配列の添字 Const '屈曲点最大値
	private final int C勾配 = 4;//4 '勾配補正の最大値
	private final int C対面 = 1;//Const
	private final int C一方 = 0;//Const
	private final int C速度 = 4;//Const
	private final int C次数 = 6;//Const
	private final double C交通量比 = 0.5;//Const
	private final int C上下線 = 2;//1;+1 配列の添字 //Const
	private final int C上 = 0;//Const
	private final int C下 = 1;//Const
/*'既定値の定数
Const C屈曲 = 4 '屈曲点最大値
Const C勾配 = 4 '勾配補正の最大値
Const C対面 = 1
Const C一方 = 0
Const C速度 = 4
Const C次数 = 6
Const C交通量比 = 0.5
Const C上下線 = 1
Const C上 = 0
Const C下 = 1
*/
	//'入力変数
	private String GS交通方式;//Private  As String
	private int GI屈曲点数;//Private  As Integer
	private final double[] GD区間勾配 = new double[C屈曲];//Private  As Double  '%
	private final double[] GD区間延長 = new double[C屈曲];//Private  As Double  'm
	//private double GDトンネル延長; 20200308コメント
	private double GD走行速度;//Private  As Double         'km/h
	//'H20追加
	private int GI供用年度;//Private  As Integer
/*'入力変数
Private GS交通方式 As String
Private GI屈曲点数 As Integer
Private GD区間勾配(C屈曲) As Double  '%
Private GD区間延長(C屈曲) As Double  'm
Private GD走行速度 As Double         'km/h
'H20追加
Private GI供用年度 As Integer
*/
	//'出力変数
	private double[][] GD勾配補正24S = new double[C上下線][C屈曲];//Private  As Double
	private double[][] GD勾配補正24L = new double[C上下線][C屈曲];//Private  As Double
	private double[][] GD勾配補正25SL = new double[C上下線][C屈曲];//Private  As Double
	private double GD速度補正24S;//Private  As Double
	private double GD速度補正24L;//Private  As Double
/*'出力変数
Private GD勾配補正24S(C上下線, C屈曲) As Double
Private GD勾配補正24L(C上下線, C屈曲) As Double
Private GD勾配補正25SL(C上下線, C屈曲) As Double
Private GD速度補正24S As Double
Private GD速度補正24L As Double
*/
	//クラスの定義
	DebugPrint db = new DebugPrint();
	//メソッドの記述
	//public static void main(final String[] args){  		//main関数の追加
	//	db.debugPrint("A01縦断H20Class");
	//}//main()
	public void A00変数設定(    //変数設定
		String nS交通方式,		//ByVal  As String, _
		int nI屈曲点,			//ByVal  As Integer, _
		double[] nD延長,
		double[] nD勾配,		//ByRef ()  As Double, _
		double nD走行速度,		//ByVal  As Double, _
		int nI供用年度 )
	{//A00変数設定 実行プログラム
//'変数宣言
		int I屈曲;//Dim  As Integer
//'変数チェック
		if(	!(nS交通方式.equals("対面通行")) && 		//交通方式
			!(nS交通方式.equals("一方通行")) 
		){// Then	
			db.debugError("error:A01縦断H20class;変数設定；交通方式に入力されている値が適切でない"); //MsgBox
/*  If nS交通方式 <> "対面通行" _
    And nS交通方式 <> "一方通行" Then
    MsgBox "縦断；変数設定；交通方式=" & _
      nS交通方式
  End If*/
		}//End If
		if((nI屈曲点 < 0) || (nI屈曲点 > C屈曲)){		//屈曲点 
			db.debugError("error:A01縦断H20class;屈曲点の設定がおかしい" + nI屈曲点);//MsgBox
/*  If nI屈曲点 < 0 Or nI屈曲点 > C屈曲 Then
    MsgBox "縦断；変数設定；屈曲点=" & _
      nI屈曲点
  End If */
		}//End If
		//GDトンネル延長 = 0;//20200305追加：延長の算出 20200308コメント
		for( I屈曲 = 0 ;I屈曲 <= nI屈曲点 ; I屈曲++ ){	//区間延長
			if(nD延長[I屈曲] < 0 ){
				db.debugError("error:A01縦断H20class;区間延長が0以下" + I屈曲 + ":" + nD延長);//MsgBox
			}//if
			//GDトンネル延長 = GDトンネル延長 + nD延長[I屈曲];//20200305追加：延長の算出 20200308コメント  
		/*For I屈曲 = 0 To nI屈曲点
		    If nD延長(I屈曲) < 1 Then
		      MsgBox "縦断；変数設定；延長=" & _
		        nD延長(I屈曲) & " 位置=" & I屈曲
		    End If
		 Next */
		}//for */
		for( I屈曲 = 0 ;I屈曲 <= nI屈曲点 ; I屈曲++ ){	//区間勾配
			if(nD勾配[I屈曲] > C勾配 || nD勾配[I屈曲] < C勾配 * -1 ){
				db.debugError("error:A01縦断H20class;区間勾配" + I屈曲 + ":" + nD勾配);//MsgBox
			}//if
/*  For I屈曲 = 0 To nI屈曲点
    If nD勾配(I屈曲) > C勾配 _
      Or nD勾配(I屈曲) < C勾配 * -1 Then
      MsgBox "縦断；変数設定；勾配=" & _
        nD勾配(I屈曲) & " 位置=" & I屈曲
    End If
  Next*/
		}//for
		if((nD走行速度 < 0.0) || (nD走行速度 > 120.0)){		//走行速度
			db.debugError("error:A01縦断H20class;走行速度の設定がおかしい" + nD走行速度);//MsgBox
/*If nD走行速度 < 0 _
    Or nD走行速度 > 120 Then
    MsgBox "縦断；変数設定；走行速度=" & _
      nD走行速度
  End If*/
		}//if
		if(nD走行速度 < 40.0){							//走行速度　４０ｋｍ・ｈ以下
			db.debugPrint("A01縦断H20class:走行速度が40km/h" + nD走行速度);//'  Debug.Print  '4
			nD走行速度 = 40.0;
/*If nD走行速度 < 40 Then
    MsgBox "走行速度が40km/h以下なので" & _
          "40km/hとして勾配補正計数の計算を行う。" & _
          "走行速度=" & nD走行速度
    nD走行速度 = 40
  End If */
		}//if
//*  '080706追加---------------------
		if((nI供用年度 < 20) || (nI供用年度 > 25)){		//供用年度
			db.debugError("error:A01縦断H20class;供用年度がおかしい" + nI供用年度);//MsgBox
/*If nI供用年度 < 20 _
    Or nI供用年度 > 25 Then
    MsgBox "縦断H20；設定変数；供用年度=" & _
      nI供用年度
  End If */
		}//if
//'変数代入
		GS交通方式 = nS交通方式;
		GI屈曲点数 = nI屈曲点;
		GD走行速度 = nD走行速度;
		for( I屈曲 = 0 ; I屈曲 <= GI屈曲点数 ; I屈曲++ ){
			GD区間延長[I屈曲] = nD延長[I屈曲];
			GD区間勾配[I屈曲] = nD勾配[I屈曲];
		}//for Next
		GI供用年度 = nI供用年度;
/*
 * GS交通方式 = nS交通方式
  GI屈曲点数 = nI屈曲点
  GD走行速度 = nD走行速度
  For I屈曲 = 0 To GI屈曲点数
    GD区間延長(I屈曲) = nD延長(I屈曲)
    GD区間勾配(I屈曲) = nD勾配(I屈曲)
  Next
  For I屈曲 = GI屈曲点数 + 1 To C屈曲
    GD区間延長(I屈曲) = 0
    GD区間勾配(I屈曲) = 0
  Next
  GI供用年度 = nI供用年度 */
//'計算実行
		S01勾配補正算出();
/*'---------------------
'目的 変数入力
'日付 080706　
'---------------------
Public Sub A00変数設定( _
  ByVal nS交通方式 As String, _
  ByVal nI屈曲点 As Integer, _
  ByRef nD延長() As Double, _
  ByRef nD勾配() As Double, _
  ByVal nD走行速度 As Double, _
  ByVal nI供用年度 As Integer)
'変数宣言
  Dim I屈曲 As Integer
'変数チェック
  If nS交通方式 <> "対面通行" _
    And nS交通方式 <> "一方通行" Then
    MsgBox "縦断；変数設定；交通方式=" & _
      nS交通方式
  End If
  If nI屈曲点 < 0 Or nI屈曲点 > C屈曲 Then
    MsgBox "縦断；変数設定；屈曲点=" & _
      nI屈曲点
  End If
  For I屈曲 = 0 To nI屈曲点
    If nD延長(I屈曲) < 1 Then
      MsgBox "縦断；変数設定；延長=" & _
        nD延長(I屈曲) & " 位置=" & I屈曲
    End If
  Next
  For I屈曲 = 0 To nI屈曲点
    If nD勾配(I屈曲) > C勾配 _
      Or nD勾配(I屈曲) < C勾配 * -1 Then
      MsgBox "縦断；変数設定；勾配=" & _
        nD勾配(I屈曲) & " 位置=" & I屈曲
    End If
  Next
  If nD走行速度 < 0 _
    Or nD走行速度 > 120 Then
    MsgBox "縦断；変数設定；走行速度=" & _
      nD走行速度
  End If
  If nD走行速度 < 40 Then
    MsgBox "走行速度が40km/h以下なので" & _
          "40km/hとして勾配補正計数の計算を行う。" & _
          "走行速度=" & nD走行速度
    nD走行速度 = 40
  End If
  '080706追加---------------------
  If nI供用年度 < 20 _
    Or nI供用年度 > 25 Then
    MsgBox "縦断H20；設定変数；供用年度=" & _
      nI供用年度
  End If
  
'変数代入
  GS交通方式 = nS交通方式
  GI屈曲点数 = nI屈曲点
  GD走行速度 = nD走行速度
  For I屈曲 = 0 To GI屈曲点数
    GD区間延長(I屈曲) = nD延長(I屈曲)
    GD区間勾配(I屈曲) = nD勾配(I屈曲)
  Next
  For I屈曲 = GI屈曲点数 + 1 To C屈曲
    GD区間延長(I屈曲) = 0
    GD区間勾配(I屈曲) = 0
  Next
  GI供用年度 = nI供用年度
'計算実行
 S01勾配補正算出
End Sub
*/ 
	}//A00変数設定
	//目的 全ての年度の補正係数を計算
	private void S01勾配補正算出(){
//変数定義
		int i;											//Dim  As Integer
		double D走行速度前; 							//Dim  As Long 変更20200209 Long -> double
		double D走行速度後;								//Dim  As Long 変更20200209 Long -> double
		double[] D区間勾配前 = new double[C屈曲];		//Dim D区間勾配前(C屈曲) As Double
		double[] D区間勾配後 = new double[C屈曲];		//Dim D区間勾配後(C屈曲) As Double
		double[] D勾配補正前 = new double[C屈曲];		//Dim D勾配補正前(C屈曲) As Double
		double[] D勾配補正後 = new double[C屈曲];		//Dim D勾配補正後(C屈曲) As Double
		double[] D勾配補正   = new double[C屈曲];		//Dim D勾配補正(C屈曲) As Double
		double[] D速度前勾配補正 = new double[C屈曲];	//Dim D速度前勾配補正(C屈曲) As Double
		double[] D速度後勾配補正 = new double[C屈曲];	//Dim (C屈曲) As Double
		double D速度補正係数前;							//Dim  As Double
		double D速度補正係数後;							//Dim  As Double
//    '上り 20-24年 小型車（速度補正無し）
        for( i = 0 ; i < C屈曲 ; i++){
            D区間勾配前[i] = Math.round(GD区間勾配[i] * 10.0 - 0.5) / 10.0;
            D区間勾配後[i] = D区間勾配前[i] + 0.1;
        }//for Next
//    '勾配計算
        for( i = 0 ; i < C屈曲 ; i++){
            D勾配補正前[i] = F勾配24S(D区間勾配前[i]);
            D勾配補正後[i] = F勾配24S(D区間勾配後[i]);
        }//for Next
//    '直線補間解析
        for( i = 0 ; i < C屈曲 ; i++){
            GD勾配補正24S[C上][i] = 
            D勾配補正前[i] 
            + (D勾配補正後[i] - D勾配補正前[i]) 
            / (D区間勾配後[i] - D区間勾配前[i]) 
            * (GD区間勾配[i] - D区間勾配前[i]);
        }//for Next
//		'上り　20-24年　大型車 (速度補正有り)
        D走行速度前 = Math.round(GD走行速度 / 10.0 - 0.5) * 10.0;
//      'エラー処理
        if( D走行速度前 < 40.0 ){//Then
			db.debugError("error:A01縦断H20Class:勾配；走行速度；走行速度が40以下なので40km/hとします。");//MsgBox
			D走行速度前 = 40.0;
        }//if End If
        if( D走行速度前 > 70.0 ){//Then
			db.debugError("error:A01縦断H20Class:勾配；走行速度；走行速度が70以上なので70km/hとします。");//MsgBox
			D走行速度前 = 70.0;
        }//if End If
        D走行速度後 = D走行速度前 + 10.0;
//        '走行速度と勾配で補正係数を出力する関数の作成-F速度勾配24L
//        '勾配計  算走行速度前
        for( i = 0 ; i < C屈曲 ; i++){
            D勾配補正前[i] = F速度勾配24L(D走行速度前, D区間勾配前[i]);
            D勾配補正後[i] = F速度勾配24L(D走行速度前, D区間勾配後[i]);
        }//for Next
        //'直線補間 算走行速度前
        for( i = 0 ; i < C屈曲 ; i++){
            D速度前勾配補正[i] = 
            D勾配補正前[i] 
            + (D勾配補正後[i] - D勾配補正前[i])
            / (D区間勾配後[i] - D区間勾配前[i])
            * (GD区間勾配[i] - D区間勾配前[i]);
        }//for Next
        //'勾配計  算走行速度後
        for( i = 0 ; i < C屈曲 ; i++ ){
            D勾配補正前[i] = F速度勾配24L(D走行速度後, D区間勾配前[i]);
            D勾配補正後[i] = F速度勾配24L(D走行速度後, D区間勾配後[i]);
        }//for Next
        //'直線補間 算走行速度後
        for( i = 0 ; i < C屈曲 ; i++ ){
            D速度後勾配補正[i] = 
            D勾配補正前[i] 
            + (D勾配補正後[i] - D勾配補正前[i]) 
            / (D区間勾配後[i] - D区間勾配前[i]) 
            * (GD区間勾配[i] - D区間勾配前[i]);
        }//for Next
        //'直線補間
        for( i = 0 ; i < C屈曲 ; i++ ){
            GD勾配補正24L[C上][i] = 
			D勾配補正前[i] 
            + (D勾配補正後[i] - D勾配補正前[i]) 
            / (D区間勾配後[i] - D区間勾配前[i]) 
            * (GD区間勾配[i] - D区間勾配前[i]);
        }//for Next
		//'上り 25年以降 小型・大型車
        for( i = 0 ; i < C屈曲 ; i++ ){
            D区間勾配前[i] = Math.round(GD区間勾配[i] / 5.0 * 10.0 - 0.5) * 5.0 / 10.0 ;//20200212このままで良いのかな？
            D区間勾配後[i] = D区間勾配前[i] + 0.5 ;
        }//for Next
        //'勾配計算
        for( i = 0 ; i < C屈曲 ; i++ ){
            D勾配補正前[i] = F勾配25SL(D区間勾配前[i]);
            D勾配補正後[i] = F勾配25SL(D区間勾配後[i]);
        }//for Next
        //'直線補間
        for( i = 0 ; i < C屈曲 ; i++){
            GD勾配補正25SL[C上][i] = 
            D勾配補正前[i] 
            + (D勾配補正後[i] - D勾配補正前[i])
            / (D区間勾配後[i] - D区間勾配前[i])
            * (GD区間勾配[i] - D区間勾配前[i]);
        }//for Next
		//'下りのために勾配を反転する。
        for( i = 0 ; i < C屈曲 ; i++){
            GD区間勾配[i] = GD区間勾配[i] * -1 ;
        }//for Next
		//'下り 20-24年 小型車（速度補正無し）
        for( i = 0 ; i < C屈曲 ; i++ ){
            D区間勾配前[i] = Math.round(GD区間勾配[i] * 10.0 - 0.5) / 10.0;
            D区間勾配後[i] = D区間勾配前[i] + 0.1 ;
        }//for Next
        //'勾配計算
        for( i = 0 ; i < C屈曲 ; i++){
            D勾配補正前[i] = F勾配24S(D区間勾配前[i]);
            D勾配補正後[i] = F勾配24S(D区間勾配後[i]);
        }//for Next
        //'直線補間
        for( i = 0 ; i < C屈曲 ; i++ ){
            GD勾配補正24S[C下][i] = 
            D勾配補正前[i] 
            + (D勾配補正後[i] - D勾配補正前[i]) 
            / (D区間勾配後[i] - D区間勾配前[i]) 
            * (GD区間勾配[i] - D区間勾配前[i]);
        }//for Next
		//'下り 20-24年 大型車 (速度補正有り)
        D走行速度前 = Math.round(GD走行速度 / 10.0 - 0.5) * 10.0;
        //'エラー処理
        if( D走行速度前 < 40.0 ){//Then
			D走行速度前 = 40.0;
			db.debugPrint("A01縦断H20Class:縦断；S01；走行速度が40以下なので40km/hとします。" + D走行速度前 );//MsgBox 
			//MsgBox "縦断；S01；走行速度が40以下なので40km/hとします。"
        }//if End If
        if( D走行速度前 > 70.0 ){// Then
			D走行速度前 = 70.0;
			db.debugPrint("縦A01縦断H20Class:断；S01；70以上なので70km/hとします。" + D走行速度前 );//MsgBox 
			//MsgBox "勾配；走行速度；走行速度が70以上なので70km/hとします。"
        }//if End If
        D走行速度後 = D走行速度前 + 10.0;
        //'走行速度と勾配で補正係数を出力する関数の作成-F速度勾配24L
        //'勾配計  算走行速度前
        for( i = 0 ; i < C屈曲 ; i++){
            D勾配補正前[i] = F速度勾配24L(D走行速度前, D区間勾配前[i]);
            D勾配補正後[i] = F速度勾配24L(D走行速度前, D区間勾配後[i]);
        }//for Next
        //'直線補間 算走行速度前
        for( i = 0 ; i < C屈曲 ; i++){
            D速度前勾配補正[i] = 
            D勾配補正前[i] 
            + (D勾配補正後[i] - D勾配補正前[i])
            / (D区間勾配後[i] - D区間勾配前[i])
            * (GD区間勾配[i] - D区間勾配前[i]);
        }//for Next
        //'勾配計  算走行速度後
        for( i = 0 ; i< C屈曲 ; i++ ){
            D勾配補正前[i] = F速度勾配24L(D走行速度後, D区間勾配前[i]);
            D勾配補正後[i] = F速度勾配24L(D走行速度後, D区間勾配後[i]);
        }//for Next
        //'直線補間 算走行速度後
        for( i = 0 ; i < C屈曲 ; i++ ){
            D速度後勾配補正[i] =
            D勾配補正前[i]
            + (D勾配補正後[i] - D勾配補正前[i])
            / (D区間勾配後[i] - D区間勾配前[i])
            * (GD区間勾配[i] - D区間勾配前[i]);
        }//for Next
       //'直線補間
        for( i = 0 ; i < C屈曲 ; i++ ){
            GD勾配補正24L[C下][i] =
            D勾配補正前[i]
            + (D勾配補正後[i] - D勾配補正前[i])
            / (D区間勾配後[i] - D区間勾配前[i])
            * (GD区間勾配[i] - D区間勾配前[i]);
        }//for Next
		//'下り 25年以降 小型・大型車
        for( i = 0 ; i < C屈曲 ; i++){
            D区間勾配前[i] = Math.round(GD区間勾配[i] / 5.0 * 10.0 - 0.5) * 5.0 / 10.0;
            D区間勾配後[i] = D区間勾配前[i] + 0.5;
        }//for Next
        //'勾配計算
        for( i = 0 ; i < C屈曲 ; i++ ){
            D勾配補正前[i] = F勾配25SL(D区間勾配前[i]);
            D勾配補正後[i] = F勾配25SL(D区間勾配後[i]);
        }//for Next
        //'直線補間
        for( i = 0 ; i < C屈曲 ; i++ ){
            GD勾配補正25SL[C下][i] = 
            D勾配補正前[i] 
            + (D勾配補正後[i] - D勾配補正前[i]) 
            / (D区間勾配後[i] - D区間勾配前[i]) 
            * (GD区間勾配[i] - D区間勾配前[i]);
        }//for Next
		//'反転した勾配を基に戻す。
        for( i = 0 ; i < C屈曲 ; i++){
            GD区間勾配[i] = GD区間勾配[i] * (-1);
        }//for Next
		//'走行速度補正設定
		//'小型車
		D速度補正係数前 = F速度24S(D走行速度前);
		D速度補正係数後 = F速度24S(D走行速度後);
		GD速度補正24S = 
			D速度補正係数前 
			+ (D速度補正係数後 - D速度補正係数前)
			/ (D走行速度後 - D走行速度前)
			* (GD走行速度 - D走行速度前);
		//'大型車
		D速度補正係数前 = F速度24L(D走行速度前);
		D速度補正係数後 = F速度24L(D走行速度後);
		GD速度補正24L = 
			D速度補正係数前 
			+ (D速度補正係数後 - D速度補正係数前)
			/ (D走行速度後 - D走行速度前)
			* (GD走行速度 - D走行速度前);
		//''Debug-----------------
		db.debugPrint( "＜A01縦断H20Class:縦断；S01勾配補正算出-H20＞");
		db.debugPrint( "A01縦断H20Class:D走行速度前=" + D走行速度前 );
		db.debugPrint( "A01縦断H20Class:GD走行速度=" + GD走行速度 );
    for( i = 0 ; i < C屈曲 ; i++){
        db.debugPrint( "A01縦断H20Class:i=" + i +"-----------------------------" );
        db.debugPrint( "A01縦断H20Class:D区間勾配前=" + D区間勾配前[i] );
        db.debugPrint( "A01縦断H20Class:D区間勾配後=" + D区間勾配後[i] );
        db.debugPrint( "A01縦断H20Class:D勾配補正前=" + D勾配補正前[i] );
        db.debugPrint( "A01縦断H20Class:D勾配補正後=" + D勾配補正後[i] );
        db.debugPrint( "A01縦断H20Class:GD区間勾配=" + GD区間勾配[i] );
        db.debugPrint( "A01縦断H20Class:上り>>>>>>>" );
        db.debugPrint( "A01縦断H20Class:GD補正係数24S=" + GD勾配補正24S[C上][i] );
        db.debugPrint( "A01縦断H20Class:GD補正係数24L=" + GD勾配補正24L[C上][i] );
        db.debugPrint( "A01縦断H20Class:GD補正係数25SL=" + GD勾配補正25SL[C上][i] );
        db.debugPrint( "A01縦断H20Class:下り<<<<<<<" );
        db.debugPrint( "A01縦断H20Class:GD補正係数24S=" + GD勾配補正24S[C下][i] );
        db.debugPrint( "A01縦断H20Class:GD補正係数24L=" + GD勾配補正24L[C下][i] );
        db.debugPrint( "A01縦断H20Class:GD補正係数25SL=" + GD勾配補正25SL[C下][i] );
    }//for Next
	//End Sub
/*vb:目的 全ての年度の補正係数を計算
'し配列に収める。
'日付 080707
'---------------------
Private Sub S01勾配補正算出()
    Dim i As Integer
    Dim D走行速度前 As Long
    Dim D走行速度後 As Long
    Dim D区間勾配前(C屈曲) As Double
    Dim D区間勾配後(C屈曲) As Double
    Dim D勾配補正前(C屈曲) As Double
    Dim D勾配補正後(C屈曲) As Double
    Dim D勾配補正(C屈曲) As Double
    Dim D速度前勾配補正(C屈曲) As Double
    Dim D速度後勾配補正(C屈曲) As Double
    Dim D速度補正係数前 As Double
    Dim D速度補正係数後 As Double
    
    '上り 20-24年 小型車（速度補正無し）
        For i = 0 To C屈曲
            D区間勾配前(i) = Round(GD区間勾配(i) * 10 - 0.5) / 10
            D区間勾配後(i) = D区間勾配前(i) + 0.1
        Next
    '勾配計算
        For i = 0 To C屈曲
            D勾配補正前(i) = F勾配24S(D区間勾配前(i))
            D勾配補正後(i) = F勾配24S(D区間勾配後(i))
        Next
    '直線補間
        For i = 0 To C屈曲
            GD勾配補正24S(C上, i) = _
            D勾配補正前(i) _
            + (D勾配補正後(i) - D勾配補正前(i)) _
            / (D区間勾配後(i) - D区間勾配前(i)) _
            * (GD区間勾配(i) - D区間勾配前(i))
        Next
		'上り 20-24年 大型車 (速度補正有り)
        D走行速度前 = Round(GD走行速度 / 10 - 0.5) * 10
        'エラー処理
        If D走行速度前 < 40 Then
          MsgBox "勾配；走行速度；走行速度が40以下なので40km/hとします。"
          D走行速度前 = 40
        End If
        If D走行速度前 > 70 Then
          MsgBox "勾配；走行速度；走行速度が70以上なので70km/hとします。"
          D走行速度前 = 70
        End If
        D走行速度後 = D走行速度前 + 10
        '走行速度と勾配で補正係数を出力する関数の作成-F速度勾配24L
        '勾配計  算走行速度前
        For i = 0 To C屈曲
            D勾配補正前(i) = F速度勾配24L(D走行速度前, D区間勾配前(i))
            D勾配補正後(i) = F速度勾配24L(D走行速度前, D区間勾配後(i))
        Next
        '直線補間 算走行速度前
        For i = 0 To C屈曲
            D速度前勾配補正(i) = _
            D勾配補正前(i) _
            + (D勾配補正後(i) - D勾配補正前(i)) _
            / (D区間勾配後(i) - D区間勾配前(i)) _
            * (GD区間勾配(i) - D区間勾配前(i))
        Next
        '勾配計  算走行速度後
        For i = 0 To C屈曲
            D勾配補正前(i) = F速度勾配24L(D走行速度後, D区間勾配前(i))
            D勾配補正後(i) = F速度勾配24L(D走行速度後, D区間勾配後(i))
        Next
        '直線補間 算走行速度後
        For i = 0 To C屈曲
            D速度後勾配補正(i) = _
            D勾配補正前(i) _
            + (D勾配補正後(i) - D勾配補正前(i)) _
            / (D区間勾配後(i) - D区間勾配前(i)) _
            * (GD区間勾配(i) - D区間勾配前(i))
        Next
        '直線補間
        For i = 0 To C屈曲
            GD勾配補正24L(C上, i) = _
            D勾配補正前(i) _
            + (D勾配補正後(i) - D勾配補正前(i)) _
            / (D区間勾配後(i) - D区間勾配前(i)) _
            * (GD区間勾配(i) - D区間勾配前(i))
        Next
		'上り 25年以降 小型・大型車
        For i = 0 To C屈曲
            D区間勾配前(i) = Round(GD区間勾配(i) / 5 * 10 - 0.5) * 5 / 10
            D区間勾配後(i) = D区間勾配前(i) + 0.5
        Next
        '勾配計算
        For i = 0 To C屈曲
            D勾配補正前(i) = F勾配25SL(D区間勾配前(i))
            D勾配補正後(i) = F勾配25SL(D区間勾配後(i))
        Next
        '直線補間
        For i = 0 To C屈曲
            GD勾配補正25SL(C上, i) = _
            D勾配補正前(i) _
            + (D勾配補正後(i) - D勾配補正前(i)) _
            / (D区間勾配後(i) - D区間勾配前(i)) _
            * (GD区間勾配(i) - D区間勾配前(i))
        Next
		'下りのために勾配を反転する。
        For i = 0 To C屈曲
            GD区間勾配(i) = GD区間勾配(i) * -1
        Next
		'下り 20-24年 小型車（速度補正無し）
        For i = 0 To C屈曲
            D区間勾配前(i) = Round(GD区間勾配(i) * 10 - 0.5) / 10
            D区間勾配後(i) = D区間勾配前(i) + 0.1
        Next
        '勾配計算
        For i = 0 To C屈曲
            D勾配補正前(i) = F勾配24S(D区間勾配前(i))
            D勾配補正後(i) = F勾配24S(D区間勾配後(i))
        Next
        '直線補間
        For i = 0 To C屈曲
            GD勾配補正24S(C下, i) = _
            D勾配補正前(i) _
            + (D勾配補正後(i) - D勾配補正前(i)) _
            / (D区間勾配後(i) - D区間勾配前(i)) _
            * (GD区間勾配(i) - D区間勾配前(i))
        Next
		'下り 20-24年 大型車 (速度補正有り)
        D走行速度前 = Round(GD走行速度 / 10 - 0.5) * 10
        'エラー処理
        If D走行速度前 < 40 Then
          MsgBox "勾配；走行速度；走行速度が40以下なので40km/hとします。"
          D走行速度前 = 40
        End If
        If D走行速度前 > 70 Then
          MsgBox "勾配；走行速度；走行速度が70以上なので70km/hとします。"
          D走行速度前 = 70
        End If
        D走行速度後 = D走行速度前 + 10

        '走行速度と勾配で補正係数を出力する関数の作成-F速度勾配24L
        '勾配計　　算走行速度前
        For i = 0 To C屈曲
            D勾配補正前(i) = F速度勾配24L(D走行速度前, D区間勾配前(i))
            D勾配補正後(i) = F速度勾配24L(D走行速度前, D区間勾配後(i))
        Next
        '直線補間　算走行速度前
        For i = 0 To C屈曲
            D速度前勾配補正(i) = _
            D勾配補正前(i) _
            + (D勾配補正後(i) - D勾配補正前(i)) _
            / (D区間勾配後(i) - D区間勾配前(i)) _
            * (GD区間勾配(i) - D区間勾配前(i))
        Next
        '勾配計　　算走行速度後
        For i = 0 To C屈曲
            D勾配補正前(i) = F速度勾配24L(D走行速度後, D区間勾配前(i))
            D勾配補正後(i) = F速度勾配24L(D走行速度後, D区間勾配後(i))
        Next
        '直線補間　算走行速度後
        For i = 0 To C屈曲
            D速度後勾配補正(i) = _
            D勾配補正前(i) _
            + (D勾配補正後(i) - D勾配補正前(i)) _
            / (D区間勾配後(i) - D区間勾配前(i)) _
            * (GD区間勾配(i) - D区間勾配前(i))
        Next
       '直線補間
        For i = 0 To C屈曲
            GD勾配補正24L(C下, i) = _
            D勾配補正前(i) _
            + (D勾配補正後(i) - D勾配補正前(i)) _
            / (D区間勾配後(i) - D区間勾配前(i)) _
            * (GD区間勾配(i) - D区間勾配前(i))
        Next
		'下り 25年以降　小型・大型車
        For i = 0 To C屈曲
            D区間勾配前(i) = Round(GD区間勾配(i) / 5 * 10 - 0.5) * 5 / 10
            D区間勾配後(i) = D区間勾配前(i) + 0.5
        Next
        '勾配計算
        For i = 0 To C屈曲
            D勾配補正前(i) = F勾配25SL(D区間勾配前(i))
            D勾配補正後(i) = F勾配25SL(D区間勾配後(i))
        Next
        '直線補間
        For i = 0 To C屈曲
            GD勾配補正25SL(C下, i) = _
            D勾配補正前(i) _
            + (D勾配補正後(i) - D勾配補正前(i)) _
            / (D区間勾配後(i) - D区間勾配前(i)) _
            * (GD区間勾配(i) - D区間勾配前(i))
        Next
		'反転した勾配を基に戻す。
        For i = 0 To C屈曲
            GD区間勾配(i) = GD区間勾配(i) * -1
        Next
	'走行速度補正設定
    '小型車
    D速度補正係数前 = F速度24S(D走行速度前)
    D速度補正係数後 = F速度24S(D走行速度後)
    GD速度補正24S = _
        D速度補正係数前 _
        + (D速度補正係数後 - D速度補正係数前) _
        / (D走行速度後 - D走行速度前) _
        * (GD走行速度 - D走行速度前)
    '大型車
    D速度補正係数前 = F速度24L(D走行速度前)
    D速度補正係数後 = F速度24L(D走行速度後)
    GD速度補正24L = _
        D速度補正係数前 _
        + (D速度補正係数後 - D速度補正係数前) _
        / (D走行速度後 - D走行速度前) _
        * (GD走行速度 - D走行速度前)
''Debug-----------------
'    Debug.Print "＜縦断；S01勾配補正算出-H20＞"
'    Debug.Print "D走行速度前=" & D走行速度前
'    Debug.Print "GD走行速度=" & GD走行速度
'    For i = 0 To 2
'        Debug.Print "i=" & i
'        Debug.Print "D区間勾配前=" & D区間勾配前(i)
'        Debug.Print "D区間勾配後=" & D区間勾配後(i)
'        Debug.Print "D勾配補正前=" & D勾配補正前(i)
'        Debug.Print "D勾配補正後=" & D勾配補正後(i)
'        Debug.Print "GD区間勾配=" & GD区間勾配(i)
'        Debug.Print "上り"
'        Debug.Print "GD補正係数24S=" & GD勾配補正24S(C上, i)
'        Debug.Print "GD補正係数24L=" & GD勾配補正24L(C上, i)
'        Debug.Print "GD補正係数25SL=" & GD勾配補正25SL(C上, i)
'        Debug.Print "下り"
'        Debug.Print "GD補正係数24S=" & GD勾配補正24S(C下, i)
'        Debug.Print "GD補正係数24L=" & GD勾配補正24L(C下, i)
'        Debug.Print "GD補正係数25SL=" & GD勾配補正25SL(C下, i)
'    Next
End Sub*/
	}//S01勾配補正算出
	//新基準に準拠した速度勾配補正係数
	private double F勾配24S(double D入力勾配 ){// As Double) As Double
		//変数定義
		final double[][] D勾配 = new double[2][81];	//Dim D勾配(1, 80) As Double
		double tempA =0 ; 						//Dim  As Double
		int tempB ;//Dim  As Long 20200207　Long->int へ。添字であり、max80なので、intで十分。longだとエラー発生
		//'勾配定義
		D勾配[0][ 0] = -4.0; D勾配[1][ 0] = 0.32;
		D勾配[0][ 1] = -3.9; D勾配[1][ 1] = 0.34;
		D勾配[0][ 2] = -3.8; D勾配[1][ 2] = 0.35;
		D勾配[0][ 3] = -3.7; D勾配[1][ 3] = 0.37;
		D勾配[0][ 4] = -3.6; D勾配[1][ 4] = 0.38;
		D勾配[0][ 5] = -3.5; D勾配[1][ 5] = 0.39;
		D勾配[0][ 6] = -3.4; D勾配[1][ 6] = 0.4;
		D勾配[0][ 7] = -3.3; D勾配[1][ 7] = 0.41;
		D勾配[0][ 8] = -3.2; D勾配[1][ 8] = 0.42;
		D勾配[0][ 9] = -3.1; D勾配[1][ 9] = 0.43;
		D勾配[0][ 10] = -3.0; D勾配[1][ 10] = 0.44;
		D勾配[0][ 11] = -2.9; D勾配[1][ 11] = 0.45;
		D勾配[0][ 12] = -2.8; D勾配[1][ 12] = 0.46;
		D勾配[0][ 13] = -2.7; D勾配[1][ 13] = 0.47;
		D勾配[0][ 14] = -2.6; D勾配[1][ 14] = 0.49;
		D勾配[0][ 15] = -2.5; D勾配[1][ 15] = 0.5;
		D勾配[0][ 16] = -2.4; D勾配[1][ 16] = 0.51;
		D勾配[0][ 17] = -2.3; D勾配[1][ 17] = 0.53;
		D勾配[0][ 18] = -2.2; D勾配[1][ 18] = 0.54;
		D勾配[0][ 19] = -2.1; D勾配[1][ 19] = 0.56;
		D勾配[0][ 20] = -2.0; D勾配[1][ 20] = 0.58;
		D勾配[0][ 21] = -1.9; D勾配[1][ 21] = 0.59;
		D勾配[0][ 22] = -1.8; D勾配[1][ 22] = 0.61;
		D勾配[0][ 23] = -1.7; D勾配[1][ 23] = 0.63;
		D勾配[0][ 24] = -1.6; D勾配[1][ 24] = 0.65;
		D勾配[0][ 25] = -1.5; D勾配[1][ 25] = 0.67;
		D勾配[0][ 26] = -1.4; D勾配[1][ 26] = 0.69;
		D勾配[0][ 27] = -1.3; D勾配[1][ 27] = 0.71;
		D勾配[0][ 28] = -1.2; D勾配[1][ 28] = 0.73;
		D勾配[0][ 29] = -1.1; D勾配[1][ 29] = 0.75;
		D勾配[0][ 30] = -1.0; D勾配[1][ 30] = 0.78;
		D勾配[0][ 31] = -0.9; D勾配[1][ 31] = 0.8;
		D勾配[0][ 32] = -0.8; D勾配[1][ 32] = 0.82;
		D勾配[0][ 33] = -0.7; D勾配[1][ 33] = 0.84;
		D勾配[0][ 34] = -0.6; D勾配[1][ 34] = 0.87;
		D勾配[0][ 35] = -0.5; D勾配[1][ 35] = 0.89;
		D勾配[0][ 36] = -0.4; D勾配[1][ 36] = 0.91;
		D勾配[0][ 37] = -0.3; D勾配[1][ 37] = 0.93;
		D勾配[0][ 38] = -0.2; D勾配[1][ 38] = 0.96;
		D勾配[0][ 39] = -0.1; D勾配[1][ 39] = 0.98;
		D勾配[0][ 40] = 0.0; D勾配[1][ 40] = 1.0;
		D勾配[0][ 41] = 0.1; D勾配[1][ 41] = 1.02;
		D勾配[0][ 42] = 0.2; D勾配[1][ 42] = 1.04;
		D勾配[0][ 43] = 0.3; D勾配[1][ 43] = 1.06;
		D勾配[0][ 44] = 0.4; D勾配[1][ 44] = 1.09;
		D勾配[0][ 45] = 0.5; D勾配[1][ 45] = 1.11;
		D勾配[0][ 46] = 0.6; D勾配[1][ 46] = 1.13;
		D勾配[0][ 47] = 0.7; D勾配[1][ 47] = 1.15;
		D勾配[0][ 48] = 0.8; D勾配[1][ 48] = 1.17;
		D勾配[0][ 49] = 0.9; D勾配[1][ 49] = 1.19;
		D勾配[0][ 50] = 1.0; D勾配[1][ 50] = 1.2;
		D勾配[0][ 51] = 1.1; D勾配[1][ 51] = 1.22;
		D勾配[0][ 52] = 1.2; D勾配[1][ 52] = 1.24;
		D勾配[0][ 53] = 1.3; D勾配[1][ 53] = 1.26;
		D勾配[0][ 54] = 1.4; D勾配[1][ 54] = 1.28;
		D勾配[0][ 55] = 1.5; D勾配[1][ 55] = 1.3;
		D勾配[0][ 56] = 1.6; D勾配[1][ 56] = 1.32;
		D勾配[0][ 57] = 1.7; D勾配[1][ 57] = 1.34;
		D勾配[0][ 58] = 1.8; D勾配[1][ 58] = 1.35;
		D勾配[0][ 59] = 1.9; D勾配[1][ 59] = 1.37;
		D勾配[0][ 60] = 2.0; D勾配[1][ 60] = 1.39;
		D勾配[0][ 61] = 2.1; D勾配[1][ 61] = 1.41;
		D勾配[0][ 62] = 2.2; D勾配[1][ 62] = 1.43;
		D勾配[0][ 63] = 2.3; D勾配[1][ 63] = 1.45;
		D勾配[0][ 64] = 2.4; D勾配[1][ 64] = 1.47;
		D勾配[0][ 65] = 2.5; D勾配[1][ 65] = 1.49;
		D勾配[0][ 66] = 2.6; D勾配[1][ 66] = 1.51;
		D勾配[0][ 67] = 2.7; D勾配[1][ 67] = 1.53;
		D勾配[0][ 68] = 2.8; D勾配[1][ 68] = 1.56;
		D勾配[0][ 69] = 2.9; D勾配[1][ 69] = 1.58;
		D勾配[0][ 70] = 3.0; D勾配[1][ 70] = 1.6;
		D勾配[0][ 71] = 3.1; D勾配[1][ 71] = 1.63;
		D勾配[0][ 72] = 3.2; D勾配[1][ 72] = 1.65;
		D勾配[0][ 73] = 3.3; D勾配[1][ 73] = 1.67;
		D勾配[0][ 74] = 3.4; D勾配[1][ 74] = 1.7;
		D勾配[0][ 75] = 3.5; D勾配[1][ 75] = 1.72;
		D勾配[0][ 76] = 3.6; D勾配[1][ 76] = 1.75;
		D勾配[0][ 77] = 3.7; D勾配[1][ 77] = 1.78;
		D勾配[0][ 78] = 3.8; D勾配[1][ 78] = 1.8;
		D勾配[0][ 79] = 3.9; D勾配[1][ 79] = 1.83;
		D勾配[0][ 80] = 4.0;   D勾配[1][ 80] = 1.85;
		D入力勾配 = Math.round(D入力勾配 * 10.0) / 10.0 ;
		tempA = 999 ;
		for(tempB = 0 ; tempB <= 80 ; tempB++){
			if( D入力勾配 == D勾配[0][tempB]){ // Then
				tempA = D勾配[1][tempB];
			}//End If
		}//for Next
    //'エラー処理--------
		if( tempA == 999 ){//Then
			db.debugError("error:A01縦断H20Class:縦断:F勾配24S:勾配=" + D入力勾配 );
		}//End If
		db.debugPrint("A01縦断H20Class:入力勾配" + D入力勾配 );
		db.debugPrint("A01縦断H20Class:F勾配24S補正係数" + tempA );
		return tempA; //F勾配24S = tempA
	}//F勾配24S End Function
	private double F速度勾配24L(//変数設定
						double D速度,// As Long, _
						double D勾配 //As Double
						)// As Double
	{//F速度勾配24L コード開始
    //Select Case D速度
	if( D速度 == 40.0 )//Case Is 
			return F勾配24L40(D勾配);//F速度勾配24L =
        if( D速度 == 50.0 )//Case Is 
			return F勾配24L50(D勾配);//F速度勾配24L = 
        if( D速度 == 60.0 )//Case Is 
			return F勾配24L60(D勾配);//F速度勾配24L = 
        if( D速度 == 70.0 )//Case Is 
			return F勾配24L70(D勾配);//F速度勾配24L = 
        if( D速度 == 80.0 )//Case Is 
			return F勾配24L80(D勾配);//F速度勾配24L = 
        else{ //Case Else
			db.debugError("error:A01縦断H20Class:勾配H20;F速度勾配24L;走行速度に問題あり");
			return 0;
		}//else
/*VB Private Function F速度勾配24L( _
                   D速度 As Long, _
                   D勾配 As Double) As Double
    Select Case D速度
        Case Is = 40
          F速度勾配24L = F勾配24L40(D勾配)
        Case Is = 50
          F速度勾配24L = F勾配24L50(D勾配)
        Case Is = 60
          F速度勾配24L = F勾配24L60(D勾配)
        Case Is = 70
          F速度勾配24L = F勾配24L70(D勾配)
        Case Is = 80
          F速度勾配24L = F勾配24L80(D勾配)
        Case Else
            MsgBox "勾配H20;F速度勾配24L;走行速度に問題あり"
    End Select
End Function
*/
	}//F速度勾配24L
	private double F勾配24L40( double D入力勾配 ){//F勾配24L40 コード開始
		double[][] D勾配 = new double[1+1][80+1];	//Dim  As Double
		double tempA;			//Dim  As Double
		int tempB;			//Dim  As Long 20200209 long -> int
//    '勾配定義
		D勾配[0][ 0] = -4.0; D勾配[1][ 0] = 0.32;
		D勾配[0][ 1] = -3.9; D勾配[1][ 1] = 0.34;
		D勾配[0][ 2] = -3.8; D勾配[1][ 2] = 0.35;
		D勾配[0][ 3] = -3.7; D勾配[1][ 3] = 0.37;
		D勾配[0][ 4] = -3.6; D勾配[1][ 4] = 0.38;
		D勾配[0][ 5] = -3.5; D勾配[1][ 5] = 0.39;
		D勾配[0][ 6] = -3.4; D勾配[1][ 6] = 0.4;
		D勾配[0][ 7] = -3.3; D勾配[1][ 7] = 0.41;
		D勾配[0][ 8] = -3.2; D勾配[1][ 8] = 0.42;
		D勾配[0][ 9] = -3.1; D勾配[1][ 9] = 0.43;
		D勾配[0][ 10] = -3.0; D勾配[1][ 10] = 0.44;
		D勾配[0][ 11] = -2.9; D勾配[1][ 11] = 0.45;
		D勾配[0][ 12] = -2.8; D勾配[1][ 12] = 0.46;
		D勾配[0][ 13] = -2.7; D勾配[1][ 13] = 0.47;
		D勾配[0][ 14] = -2.6; D勾配[1][ 14] = 0.49;
		D勾配[0][ 15] = -2.5; D勾配[1][ 15] = 0.5;
		D勾配[0][ 16] = -2.4; D勾配[1][ 16] = 0.51;
		D勾配[0][ 17] = -2.3; D勾配[1][ 17] = 0.53;
		D勾配[0][ 18] = -2.2; D勾配[1][ 18] = 0.54;
		D勾配[0][ 19] = -2.1; D勾配[1][ 19] = 0.56;
		D勾配[0][ 20] = -2.0; D勾配[1][ 20] = 0.58;
		D勾配[0][ 21] = -1.9; D勾配[1][ 21] = 0.59;
		D勾配[0][ 22] = -1.8; D勾配[1][ 22] = 0.61;
		D勾配[0][ 23] = -1.7; D勾配[1][ 23] = 0.63;
		D勾配[0][ 24] = -1.6; D勾配[1][ 24] = 0.65;
		D勾配[0][ 25] = -1.5; D勾配[1][ 25] = 0.67;
		D勾配[0][ 26] = -1.4; D勾配[1][ 26] = 0.69;
		D勾配[0][ 27] = -1.3; D勾配[1][ 27] = 0.71;
		D勾配[0][ 28] = -1.2; D勾配[1][ 28] = 0.73;
		D勾配[0][ 29] = -1.1; D勾配[1][ 29] = 0.75;
		D勾配[0][ 30] = -1.0; D勾配[1][ 30] = 0.78;
		D勾配[0][ 31] = -0.9; D勾配[1][ 31] = 0.8;
		D勾配[0][ 32] = -0.8; D勾配[1][ 32] = 0.82;
		D勾配[0][ 33] = -0.7; D勾配[1][ 33] = 0.84;
		D勾配[0][ 34] = -0.6; D勾配[1][ 34] = 0.87;
		D勾配[0][ 35] = -0.5; D勾配[1][ 35] = 0.89;
		D勾配[0][ 36] = -0.4; D勾配[1][ 36] = 0.91;
		D勾配[0][ 37] = -0.3; D勾配[1][ 37] = 0.93;
		D勾配[0][ 38] = -0.2; D勾配[1][ 38] = 0.96;
		D勾配[0][ 39] = -0.1; D勾配[1][ 39] = 0.98;
		D勾配[0][ 40] = 0.0; D勾配[1][ 40] = 1.0;
		D勾配[0][ 41] = 0.1; D勾配[1][ 41] = 1.03;
		D勾配[0][ 42] = 0.2; D勾配[1][ 42] = 1.07;
		D勾配[0][ 43] = 0.3; D勾配[1][ 43] = 1.11;
		D勾配[0][ 44] = 0.4; D勾配[1][ 44] = 1.15;
		D勾配[0][ 45] = 0.5; D勾配[1][ 45] = 1.19;
		D勾配[0][ 46] = 0.6; D勾配[1][ 46] = 1.24;
		D勾配[0][ 47] = 0.7; D勾配[1][ 47] = 1.28;
		D勾配[0][ 48] = 0.8; D勾配[1][ 48] = 1.32;
		D勾配[0][ 49] = 0.9; D勾配[1][ 49] = 1.37;
		D勾配[0][ 50] = 1.0; D勾配[1][ 50] = 1.42;
		D勾配[0][ 51] = 1.1; D勾配[1][ 51] = 1.46;
		D勾配[0][ 52] = 1.2; D勾配[1][ 52] = 1.51;
		D勾配[0][ 53] = 1.3; D勾配[1][ 53] = 1.56;
		D勾配[0][ 54] = 1.4; D勾配[1][ 54] = 1.61;
		D勾配[0][ 55] = 1.5; D勾配[1][ 55] = 1.67;
		D勾配[0][ 56] = 1.6; D勾配[1][ 56] = 1.72;
		D勾配[0][ 57] = 1.7; D勾配[1][ 57] = 1.77;
		D勾配[0][ 58] = 1.8; D勾配[1][ 58] = 1.83;
		D勾配[0][ 59] = 1.9; D勾配[1][ 59] = 1.89;
		D勾配[0][ 60] = 2.0; D勾配[1][ 60] = 1.95;
		D勾配[0][ 61] = 2.1; D勾配[1][ 61] = 2.01;
		D勾配[0][ 62] = 2.2; D勾配[1][ 62] = 2.08;
		D勾配[0][ 63] = 2.3; D勾配[1][ 63] = 2.15;
		D勾配[0][ 64] = 2.4; D勾配[1][ 64] = 2.22;
		D勾配[0][ 65] = 2.5; D勾配[1][ 65] = 2.29;
		D勾配[0][ 66] = 2.6; D勾配[1][ 66] = 2.37;
		D勾配[0][ 67] = 2.7; D勾配[1][ 67] = 2.46;
		D勾配[0][ 68] = 2.8; D勾配[1][ 68] = 2.54;
		D勾配[0][ 69] = 2.9; D勾配[1][ 69] = 2.64;
		D勾配[0][ 70] = 3.0; D勾配[1][ 70] = 2.74;
		D勾配[0][ 71] = 3.1; D勾配[1][ 71] = 2.85;
		D勾配[0][ 72] = 3.2; D勾配[1][ 72] = 2.97;
		D勾配[0][ 73] = 3.3; D勾配[1][ 73] = 3.11;
		D勾配[0][ 74] = 3.4; D勾配[1][ 74] = 3.26;
		D勾配[0][ 75] = 3.5; D勾配[1][ 75] = 3.42;
		D勾配[0][ 76] = 3.6; D勾配[1][ 76] = 3.61;
		D勾配[0][ 77] = 3.7; D勾配[1][ 77] = 3.82;
		D勾配[0][ 78] = 3.8; D勾配[1][ 78] = 4.05;
		D勾配[0][ 79] = 3.9; D勾配[1][ 79] = 4.32;
		D勾配[0][ 80] = 4.0; D勾配[1][ 80] = 4.63;

		D入力勾配 = Math.round(D入力勾配*10)/10;
		tempA = 999;
		for( tempB = 0 ; tempB <= 80 ; tempB++){
			if( D入力勾配 == D勾配[0][tempB] ){ //Then
				tempA = D勾配[1][tempB];
			}//if End If
		}//for Next
//    'エラー処理--------
		if( tempA == 999 ){ //Then
			db.debugError("error:A01縦断H20Class:勾配H20;F速度勾配24L;走行速度に問題あり");//MsgBox
			//MsgBox "縦断；F勾配24L40；勾配=" & D入力勾配
		}//if End If
		return tempA;//F勾配24L40 = 
/*Private Function F勾配24L40(D入力勾配 As Double) As Double
    Dim D勾配(1, 80) As Double
    Dim tempA As Double
    Dim tempB As Long
    '勾配定義
    D勾配(0, 0) = -4: D勾配(1, 0) = 0.32
    D勾配(0, 1) = -3.9: D勾配(1, 1) = 0.34
    D勾配(0, 2) = -3.8: D勾配(1, 2) = 0.35
    D勾配(0, 3) = -3.7: D勾配(1, 3) = 0.37
    D勾配(0, 4) = -3.6: D勾配(1, 4) = 0.38
    D勾配(0, 5) = -3.5: D勾配(1, 5) = 0.39
    D勾配(0, 6) = -3.4: D勾配(1, 6) = 0.4
    D勾配(0, 7) = -3.3: D勾配(1, 7) = 0.41
    D勾配(0, 8) = -3.2: D勾配(1, 8) = 0.42
    D勾配(0, 9) = -3.1: D勾配(1, 9) = 0.43
    D勾配(0, 10) = -3: D勾配(1, 10) = 0.44
    D勾配(0, 11) = -2.9: D勾配(1, 11) = 0.45
    D勾配(0, 12) = -2.8: D勾配(1, 12) = 0.46
    D勾配(0, 13) = -2.7: D勾配(1, 13) = 0.47
    D勾配(0, 14) = -2.6: D勾配(1, 14) = 0.49
    D勾配(0, 15) = -2.5: D勾配(1, 15) = 0.5
    D勾配(0, 16) = -2.4: D勾配(1, 16) = 0.51
    D勾配(0, 17) = -2.3: D勾配(1, 17) = 0.53
    D勾配(0, 18) = -2.2: D勾配(1, 18) = 0.54
    D勾配(0, 19) = -2.1: D勾配(1, 19) = 0.56
    D勾配(0, 20) = -2: D勾配(1, 20) = 0.58
    D勾配(0, 21) = -1.9: D勾配(1, 21) = 0.59
    D勾配(0, 22) = -1.8: D勾配(1, 22) = 0.61
    D勾配(0, 23) = -1.7: D勾配(1, 23) = 0.63
    D勾配(0, 24) = -1.6: D勾配(1, 24) = 0.65
    D勾配(0, 25) = -1.5: D勾配(1, 25) = 0.67
    D勾配(0, 26) = -1.4: D勾配(1, 26) = 0.69
    D勾配(0, 27) = -1.3: D勾配(1, 27) = 0.71
    D勾配(0, 28) = -1.2: D勾配(1, 28) = 0.73
    D勾配(0, 29) = -1.1: D勾配(1, 29) = 0.75
    D勾配(0, 30) = -1: D勾配(1, 30) = 0.78
    D勾配(0, 31) = -0.9: D勾配(1, 31) = 0.8
    D勾配(0, 32) = -0.8: D勾配(1, 32) = 0.82
    D勾配(0, 33) = -0.7: D勾配(1, 33) = 0.84
    D勾配(0, 34) = -0.6: D勾配(1, 34) = 0.87
    D勾配(0, 35) = -0.5: D勾配(1, 35) = 0.89
    D勾配(0, 36) = -0.4: D勾配(1, 36) = 0.91
    D勾配(0, 37) = -0.3: D勾配(1, 37) = 0.93
    D勾配(0, 38) = -0.2: D勾配(1, 38) = 0.96
    D勾配(0, 39) = -0.1: D勾配(1, 39) = 0.98
    D勾配(0, 40) = 0: D勾配(1, 40) = 1
    D勾配(0, 41) = 0.1: D勾配(1, 41) = 1.03
    D勾配(0, 42) = 0.2: D勾配(1, 42) = 1.07
    D勾配(0, 43) = 0.3: D勾配(1, 43) = 1.11
    D勾配(0, 44) = 0.4: D勾配(1, 44) = 1.15
    D勾配(0, 45) = 0.5: D勾配(1, 45) = 1.19
    D勾配(0, 46) = 0.6: D勾配(1, 46) = 1.24
    D勾配(0, 47) = 0.7: D勾配(1, 47) = 1.28
    D勾配(0, 48) = 0.8: D勾配(1, 48) = 1.32
    D勾配(0, 49) = 0.9: D勾配(1, 49) = 1.37
    D勾配(0, 50) = 1: D勾配(1, 50) = 1.42
    D勾配(0, 51) = 1.1: D勾配(1, 51) = 1.46
    D勾配(0, 52) = 1.2: D勾配(1, 52) = 1.51
    D勾配(0, 53) = 1.3: D勾配(1, 53) = 1.56
    D勾配(0, 54) = 1.4: D勾配(1, 54) = 1.61
    D勾配(0, 55) = 1.5: D勾配(1, 55) = 1.67
    D勾配(0, 56) = 1.6: D勾配(1, 56) = 1.72
    D勾配(0, 57) = 1.7: D勾配(1, 57) = 1.77
    D勾配(0, 58) = 1.8: D勾配(1, 58) = 1.83
    D勾配(0, 59) = 1.9: D勾配(1, 59) = 1.89
    D勾配(0, 60) = 2: D勾配(1, 60) = 1.95
    D勾配(0, 61) = 2.1: D勾配(1, 61) = 2.01
    D勾配(0, 62) = 2.2: D勾配(1, 62) = 2.08
    D勾配(0, 63) = 2.3: D勾配(1, 63) = 2.15
    D勾配(0, 64) = 2.4: D勾配(1, 64) = 2.22
    D勾配(0, 65) = 2.5: D勾配(1, 65) = 2.29
    D勾配(0, 66) = 2.6: D勾配(1, 66) = 2.37
    D勾配(0, 67) = 2.7: D勾配(1, 67) = 2.46
    D勾配(0, 68) = 2.8: D勾配(1, 68) = 2.54
    D勾配(0, 69) = 2.9: D勾配(1, 69) = 2.64
    D勾配(0, 70) = 3: D勾配(1, 70) = 2.74
    D勾配(0, 71) = 3.1: D勾配(1, 71) = 2.85
    D勾配(0, 72) = 3.2: D勾配(1, 72) = 2.97
    D勾配(0, 73) = 3.3: D勾配(1, 73) = 3.11
    D勾配(0, 74) = 3.4: D勾配(1, 74) = 3.26
    D勾配(0, 75) = 3.5: D勾配(1, 75) = 3.42
    D勾配(0, 76) = 3.6: D勾配(1, 76) = 3.61
    D勾配(0, 77) = 3.7: D勾配(1, 77) = 3.82
    D勾配(0, 78) = 3.8: D勾配(1, 78) = 4.05
    D勾配(0, 79) = 3.9: D勾配(1, 79) = 4.32
    D勾配(0, 80) = 4: D勾配(1, 80) = 4.63
    
    D入力勾配 = Round(D入力勾配, 1)
    tempA = 999
    For tempB = 0 To 80
        If D入力勾配 = D勾配(0, tempB) Then
            tempA = D勾配(1, tempB)
        End If
    Next
    F勾配24L40 = tempA
    'エラー処理--------
    If tempA = 999 Then
        MsgBox "縦断；F勾配24L40；勾配=" & D入力勾配
    End If
End Function
*/
	}//F勾配24L40
	private double F勾配24L50( double D入力勾配 ){//F勾配24L50 コード開始
		double[][] D勾配 =new double[1+1][80+1];// As Double
		double tempA;//Dim  As Double
		int tempB;//Dim As Long -> int20200209 
//    '勾配定義
		D勾配[0][ 0] = -4.0; D勾配[1][ 0] = 0.32;
		D勾配[0][ 1] = -3.9; D勾配[1][ 1] = 0.34;
		D勾配[0][ 2] = -3.8; D勾配[1][ 2] = 0.35;
		D勾配[0][ 3] = -3.7; D勾配[1][ 3] = 0.37;
		D勾配[0][ 4] = -3.6; D勾配[1][ 4] = 0.38;
		D勾配[0][ 5] = -3.5; D勾配[1][ 5] = 0.39;
		D勾配[0][ 6] = -3.4; D勾配[1][ 6] = 0.4;
		D勾配[0][ 7] = -3.3; D勾配[1][ 7] = 0.41;
		D勾配[0][ 8] = -3.2; D勾配[1][ 8] = 0.42;
		D勾配[0][ 9] = -3.1; D勾配[1][ 9] = 0.43;
		D勾配[0][ 10] = -3.0; D勾配[1][ 10] = 0.44;
		D勾配[0][ 11] = -2.9; D勾配[1][ 11] = 0.45;
		D勾配[0][ 12] = -2.8; D勾配[1][ 12] = 0.46;
		D勾配[0][ 13] = -2.7; D勾配[1][ 13] = 0.47;
		D勾配[0][ 14] = -2.6; D勾配[1][ 14] = 0.49;
		D勾配[0][ 15] = -2.5; D勾配[1][ 15] = 0.5;
		D勾配[0][ 16] = -2.4; D勾配[1][ 16] = 0.51;
		D勾配[0][ 17] = -2.3; D勾配[1][ 17] = 0.53;
		D勾配[0][ 18] = -2.2; D勾配[1][ 18] = 0.54;
		D勾配[0][ 19] = -2.1; D勾配[1][ 19] = 0.56;
		D勾配[0][ 20] = -2.0; D勾配[1][ 20] = 0.58;
		D勾配[0][ 21] = -1.9; D勾配[1][ 21] = 0.59;
		D勾配[0][ 22] = -1.8; D勾配[1][ 22] = 0.61;
		D勾配[0][ 23] = -1.7; D勾配[1][ 23] = 0.63;
		D勾配[0][ 24] = -1.6; D勾配[1][ 24] = 0.65;
		D勾配[0][ 25] = -1.5; D勾配[1][ 25] = 0.67;
		D勾配[0][ 26] = -1.4; D勾配[1][ 26] = 0.69;
		D勾配[0][ 27] = -1.3; D勾配[1][ 27] = 0.71;
		D勾配[0][ 28] = -1.2; D勾配[1][ 28] = 0.73;
		D勾配[0][ 29] = -1.1; D勾配[1][ 29] = 0.75;
		D勾配[0][ 30] = -1.0; D勾配[1][ 30] = 0.78;
		D勾配[0][ 31] = -0.9; D勾配[1][ 31] = 0.8;
		D勾配[0][ 32] = -0.8; D勾配[1][ 32] = 0.82;
		D勾配[0][ 33] = -0.7; D勾配[1][ 33] = 0.84;
		D勾配[0][ 34] = -0.6; D勾配[1][ 34] = 0.87;
		D勾配[0][ 35] = -0.5; D勾配[1][ 35] = 0.89;
		D勾配[0][ 36] = -0.4; D勾配[1][ 36] = 0.91;
		D勾配[0][ 37] = -0.3; D勾配[1][ 37] = 0.93;
		D勾配[0][ 38] = -0.2; D勾配[1][ 38] = 0.96;
		D勾配[0][ 39] = -0.1; D勾配[1][ 39] = 0.98;
		D勾配[0][ 40] = 0.0; D勾配[1][ 40] = 1.0;
		D勾配[0][ 41] = 0.1; D勾配[1][ 41] = 1.03;
		D勾配[0][ 42] = 0.2; D勾配[1][ 42] = 1.07;
		D勾配[0][ 43] = 0.3; D勾配[1][ 43] = 1.11;
		D勾配[0][ 44] = 0.4; D勾配[1][ 44] = 1.15;
		D勾配[0][ 45] = 0.5; D勾配[1][ 45] = 1.19;
		D勾配[0][ 46] = 0.6; D勾配[1][ 46] = 1.24;
		D勾配[0][ 47] = 0.7; D勾配[1][ 47] = 1.28;
		D勾配[0][ 48] = 0.8; D勾配[1][ 48] = 1.32;
		D勾配[0][ 49] = 0.9; D勾配[1][ 49] = 1.37;
		D勾配[0][ 50] = 1.0; D勾配[1][ 50] = 1.42;
		D勾配[0][ 51] = 1.1; D勾配[1][ 51] = 1.46;
		D勾配[0][ 52] = 1.2; D勾配[1][ 52] = 1.51;
		D勾配[0][ 53] = 1.3; D勾配[1][ 53] = 1.56;
		D勾配[0][ 54] = 1.4; D勾配[1][ 54] = 1.61;
		D勾配[0][ 55] = 1.5; D勾配[1][ 55] = 1.67;
		D勾配[0][ 56] = 1.6; D勾配[1][ 56] = 1.72;
		D勾配[0][ 57] = 1.7; D勾配[1][ 57] = 1.77;
		D勾配[0][ 58] = 1.8; D勾配[1][ 58] = 1.83;
		D勾配[0][ 59] = 1.9; D勾配[1][ 59] = 1.89;
		D勾配[0][ 60] = 2.0; D勾配[1][ 60] = 1.95;
		D勾配[0][ 61] = 2.1; D勾配[1][ 61] = 2.01;
		D勾配[0][ 62] = 2.2; D勾配[1][ 62] = 2.08;
		D勾配[0][ 63] = 2.3; D勾配[1][ 63] = 2.15;
		D勾配[0][ 64] = 2.4; D勾配[1][ 64] = 2.22;
		D勾配[0][ 65] = 2.5; D勾配[1][ 65] = 2.29;
		D勾配[0][ 66] = 2.6; D勾配[1][ 66] = 2.37;
		D勾配[0][ 67] = 2.7; D勾配[1][ 67] = 2.46;
		D勾配[0][ 68] = 2.8; D勾配[1][ 68] = 2.55;
		D勾配[0][ 69] = 2.9; D勾配[1][ 69] = 2.65;
		D勾配[0][ 70] = 3.0; D勾配[1][ 70] = 2.76;
		D勾配[0][ 71] = 3.1; D勾配[1][ 71] = 2.88;
		D勾配[0][ 72] = 3.2; D勾配[1][ 72] = 3.01;
		D勾配[0][ 73] = 3.3; D勾配[1][ 73] = 3.15;
		D勾配[0][ 74] = 3.4; D勾配[1][ 74] = 3.31;
		D勾配[0][ 75] = 3.5; D勾配[1][ 75] = 3.5;
		D勾配[0][ 76] = 3.6; D勾配[1][ 76] = 3.7;
		D勾配[0][ 77] = 3.7; D勾配[1][ 77] = 3.93;
		D勾配[0][ 78] = 3.8; D勾配[1][ 78] = 4.19;
		D勾配[0][ 79] = 3.9; D勾配[1][ 79] = 4.49;
		D勾配[0][ 80] = 4.0; D勾配[1][ 80] = 4.83;

		D入力勾配 = Math.round(D入力勾配*10) /10;
		tempA = 999;
		for( tempB = 0 ; tempB <= 80 ; tempB++){
			if( D入力勾配 == D勾配[0][tempB] ){// Then
				tempA = D勾配[1][tempB];
			}//if End If
		}//for Next
//    'エラー処理--------
		if( tempA == 999 ){//Then
			db.debugError("error:A01縦断H20Class:縦断；F勾配24L50；勾配=" + D入力勾配);//MsgBox
			//MsgBox "縦断；F勾配24L50；勾配=" & D入力勾配
		}//if End If
/*Private Function F勾配24L50(D入力勾配 As Double) As Double
    Dim D勾配(1, 80) As Double
    Dim tempA As Double
    Dim tempB As Long
    '勾配定義
    D勾配(0, 0) = -4: D勾配(1, 0) = 0.32
    D勾配(0, 1) = -3.9: D勾配(1, 1) = 0.34
    D勾配(0, 2) = -3.8: D勾配(1, 2) = 0.35
    D勾配(0, 3) = -3.7: D勾配(1, 3) = 0.37
    D勾配(0, 4) = -3.6: D勾配(1, 4) = 0.38
    D勾配(0, 5) = -3.5: D勾配(1, 5) = 0.39
    D勾配(0, 6) = -3.4: D勾配(1, 6) = 0.4
    D勾配(0, 7) = -3.3: D勾配(1, 7) = 0.41
    D勾配(0, 8) = -3.2: D勾配(1, 8) = 0.42
    D勾配(0, 9) = -3.1: D勾配(1, 9) = 0.43
    D勾配(0, 10) = -3: D勾配(1, 10) = 0.44
    D勾配(0, 11) = -2.9: D勾配(1, 11) = 0.45
    D勾配(0, 12) = -2.8: D勾配(1, 12) = 0.46
    D勾配(0, 13) = -2.7: D勾配(1, 13) = 0.47
    D勾配(0, 14) = -2.6: D勾配(1, 14) = 0.49
    D勾配(0, 15) = -2.5: D勾配(1, 15) = 0.5
    D勾配(0, 16) = -2.4: D勾配(1, 16) = 0.51
    D勾配(0, 17) = -2.3: D勾配(1, 17) = 0.53
    D勾配(0, 18) = -2.2: D勾配(1, 18) = 0.54
    D勾配(0, 19) = -2.1: D勾配(1, 19) = 0.56
    D勾配(0, 20) = -2: D勾配(1, 20) = 0.58
    D勾配(0, 21) = -1.9: D勾配(1, 21) = 0.59
    D勾配(0, 22) = -1.8: D勾配(1, 22) = 0.61
    D勾配(0, 23) = -1.7: D勾配(1, 23) = 0.63
    D勾配(0, 24) = -1.6: D勾配(1, 24) = 0.65
    D勾配(0, 25) = -1.5: D勾配(1, 25) = 0.67
    D勾配(0, 26) = -1.4: D勾配(1, 26) = 0.69
    D勾配(0, 27) = -1.3: D勾配(1, 27) = 0.71
    D勾配(0, 28) = -1.2: D勾配(1, 28) = 0.73
    D勾配(0, 29) = -1.1: D勾配(1, 29) = 0.75
    D勾配(0, 30) = -1: D勾配(1, 30) = 0.78
    D勾配(0, 31) = -0.9: D勾配(1, 31) = 0.8
    D勾配(0, 32) = -0.8: D勾配(1, 32) = 0.82
    D勾配(0, 33) = -0.7: D勾配(1, 33) = 0.84
    D勾配(0, 34) = -0.6: D勾配(1, 34) = 0.87
    D勾配(0, 35) = -0.5: D勾配(1, 35) = 0.89
    D勾配(0, 36) = -0.4: D勾配(1, 36) = 0.91
    D勾配(0, 37) = -0.3: D勾配(1, 37) = 0.93
    D勾配(0, 38) = -0.2: D勾配(1, 38) = 0.96
    D勾配(0, 39) = -0.1: D勾配(1, 39) = 0.98
    D勾配(0, 40) = 0: D勾配(1, 40) = 1
    D勾配(0, 41) = 0.1: D勾配(1, 41) = 1.03
    D勾配(0, 42) = 0.2: D勾配(1, 42) = 1.07
    D勾配(0, 43) = 0.3: D勾配(1, 43) = 1.11
    D勾配(0, 44) = 0.4: D勾配(1, 44) = 1.15
    D勾配(0, 45) = 0.5: D勾配(1, 45) = 1.19
    D勾配(0, 46) = 0.6: D勾配(1, 46) = 1.24
    D勾配(0, 47) = 0.7: D勾配(1, 47) = 1.28
    D勾配(0, 48) = 0.8: D勾配(1, 48) = 1.32
    D勾配(0, 49) = 0.9: D勾配(1, 49) = 1.37
    D勾配(0, 50) = 1: D勾配(1, 50) = 1.42
    D勾配(0, 51) = 1.1: D勾配(1, 51) = 1.46
    D勾配(0, 52) = 1.2: D勾配(1, 52) = 1.51
    D勾配(0, 53) = 1.3: D勾配(1, 53) = 1.56
    D勾配(0, 54) = 1.4: D勾配(1, 54) = 1.61
    D勾配(0, 55) = 1.5: D勾配(1, 55) = 1.67
    D勾配(0, 56) = 1.6: D勾配(1, 56) = 1.72
    D勾配(0, 57) = 1.7: D勾配(1, 57) = 1.77
    D勾配(0, 58) = 1.8: D勾配(1, 58) = 1.83
    D勾配(0, 59) = 1.9: D勾配(1, 59) = 1.89
    D勾配(0, 60) = 2: D勾配(1, 60) = 1.95
    D勾配(0, 61) = 2.1: D勾配(1, 61) = 2.01
    D勾配(0, 62) = 2.2: D勾配(1, 62) = 2.08
    D勾配(0, 63) = 2.3: D勾配(1, 63) = 2.15
    D勾配(0, 64) = 2.4: D勾配(1, 64) = 2.22
    D勾配(0, 65) = 2.5: D勾配(1, 65) = 2.29
    D勾配(0, 66) = 2.6: D勾配(1, 66) = 2.37
    D勾配(0, 67) = 2.7: D勾配(1, 67) = 2.46
    D勾配(0, 68) = 2.8: D勾配(1, 68) = 2.55
    D勾配(0, 69) = 2.9: D勾配(1, 69) = 2.65
    D勾配(0, 70) = 3: D勾配(1, 70) = 2.76
    D勾配(0, 71) = 3.1: D勾配(1, 71) = 2.88
    D勾配(0, 72) = 3.2: D勾配(1, 72) = 3.01
    D勾配(0, 73) = 3.3: D勾配(1, 73) = 3.15
    D勾配(0, 74) = 3.4: D勾配(1, 74) = 3.31
    D勾配(0, 75) = 3.5: D勾配(1, 75) = 3.5
    D勾配(0, 76) = 3.6: D勾配(1, 76) = 3.7
    D勾配(0, 77) = 3.7: D勾配(1, 77) = 3.93
    D勾配(0, 78) = 3.8: D勾配(1, 78) = 4.19
    D勾配(0, 79) = 3.9: D勾配(1, 79) = 4.49
    D勾配(0, 80) = 4: D勾配(1, 80) = 4.83
    
    D入力勾配 = Round(D入力勾配, 1)
    tempA = 999
    For tempB = 0 To 80
        If D入力勾配 = D勾配(0, tempB) Then
            tempA = D勾配(1, tempB)
        End If
    Next
    'MsgBox S速度
    F勾配24L50 = tempA
    'エラー処理--------
    If tempA = 999 Then
        MsgBox "縦断；F勾配24L50；勾配=" & D入力勾配
    End If
End Function */
		return tempA;//F勾配24L50 = 	
	}//F勾配24L50
	private double F勾配24L60( double D入力勾配 ){//F勾配24L60 コード開始
		double[][] D勾配 = new double[1+1][80+1];//Dim  As Double
		double tempA;//Dim  As Double
		int tempB;//Dim As Long -> int 20200209
//    '勾配定義
		D勾配[0][ 0] = -4.0; D勾配[1][ 0] = 0.32;
		D勾配[0][ 1] = -3.9; D勾配[1][ 1] = 0.34;
		D勾配[0][ 2] = -3.8; D勾配[1][ 2] = 0.35;
		D勾配[0][ 3] = -3.7; D勾配[1][ 3] = 0.37;
		D勾配[0][ 4] = -3.6; D勾配[1][ 4] = 0.38;
		D勾配[0][ 5] = -3.5; D勾配[1][ 5] = 0.39;
		D勾配[0][ 6] = -3.4; D勾配[1][ 6] = 0.4;
		D勾配[0][ 7] = -3.3; D勾配[1][ 7] = 0.41;
		D勾配[0][ 8] = -3.2; D勾配[1][ 8] = 0.42;
		D勾配[0][ 9] = -3.1; D勾配[1][ 9] = 0.43;
		D勾配[0][ 10] = -3.0; D勾配[1][ 10] = 0.44;
		D勾配[0][ 11] = -2.9; D勾配[1][ 11] = 0.45;
		D勾配[0][ 12] = -2.8; D勾配[1][ 12] = 0.46;
		D勾配[0][ 13] = -2.7; D勾配[1][ 13] = 0.47;
		D勾配[0][ 14] = -2.6; D勾配[1][ 14] = 0.49;
		D勾配[0][ 15] = -2.5; D勾配[1][ 15] = 0.5;
		D勾配[0][ 16] = -2.4; D勾配[1][ 16] = 0.51;
		D勾配[0][ 17] = -2.3; D勾配[1][ 17] = 0.53;
		D勾配[0][ 18] = -2.2; D勾配[1][ 18] = 0.54;
		D勾配[0][ 19] = -2.1; D勾配[1][ 19] = 0.56;
		D勾配[0][ 20] = -2.0; D勾配[1][ 20] = 0.58;
		D勾配[0][ 21] = -1.9; D勾配[1][ 21] = 0.59;
		D勾配[0][ 22] = -1.8; D勾配[1][ 22] = 0.61;
		D勾配[0][ 23] = -1.7; D勾配[1][ 23] = 0.63;
		D勾配[0][ 24] = -1.6; D勾配[1][ 24] = 0.65;
		D勾配[0][ 25] = -1.5; D勾配[1][ 25] = 0.67;
		D勾配[0][ 26] = -1.4; D勾配[1][ 26] = 0.69;
		D勾配[0][ 27] = -1.3; D勾配[1][ 27] = 0.71;
		D勾配[0][ 28] = -1.2; D勾配[1][ 28] = 0.73;
		D勾配[0][ 29] = -1.1; D勾配[1][ 29] = 0.75;
		D勾配[0][ 30] = -1.0; D勾配[1][ 30] = 0.78;
		D勾配[0][ 31] = -0.9; D勾配[1][ 31] = 0.8;
		D勾配[0][ 32] = -0.8; D勾配[1][ 32] = 0.82;
		D勾配[0][ 33] = -0.7; D勾配[1][ 33] = 0.84;
		D勾配[0][ 34] = -0.6; D勾配[1][ 34] = 0.87;
		D勾配[0][ 35] = -0.5; D勾配[1][ 35] = 0.89;
		D勾配[0][ 36] = -0.4; D勾配[1][ 36] = 0.91;
		D勾配[0][ 37] = -0.3; D勾配[1][ 37] = 0.93;
		D勾配[0][ 38] = -0.2; D勾配[1][ 38] = 0.96;
		D勾配[0][ 39] = -0.1; D勾配[1][ 39] = 0.98;
		D勾配[0][ 40] = 0.0; D勾配[1][ 40] = 1.0;
		D勾配[0][ 41] = 0.1; D勾配[1][ 41] = 1.03;
		D勾配[0][ 42] = 0.2; D勾配[1][ 42] = 1.07;
		D勾配[0][ 43] = 0.3; D勾配[1][ 43] = 1.11;
		D勾配[0][ 44] = 0.4; D勾配[1][ 44] = 1.15;
		D勾配[0][ 45] = 0.5; D勾配[1][ 45] = 1.19;
		D勾配[0][ 46] = 0.6; D勾配[1][ 46] = 1.24;
		D勾配[0][ 47] = 0.7; D勾配[1][ 47] = 1.28;
		D勾配[0][ 48] = 0.8; D勾配[1][ 48] = 1.32;
		D勾配[0][ 49] = 0.9; D勾配[1][ 49] = 1.37;
		D勾配[0][ 50] = 1.0; D勾配[1][ 50] = 1.42;
		D勾配[0][ 51] = 1.1; D勾配[1][ 51] = 1.46;
		D勾配[0][ 52] = 1.2; D勾配[1][ 52] = 1.51;
		D勾配[0][ 53] = 1.3; D勾配[1][ 53] = 1.56;
		D勾配[0][ 54] = 1.4; D勾配[1][ 54] = 1.61;
		D勾配[0][ 55] = 1.5; D勾配[1][ 55] = 1.67;
		D勾配[0][ 56] = 1.6; D勾配[1][ 56] = 1.72;
		D勾配[0][ 57] = 1.7; D勾配[1][ 57] = 1.77;
		D勾配[0][ 58] = 1.8; D勾配[1][ 58] = 1.83;
		D勾配[0][ 59] = 1.9; D勾配[1][ 59] = 1.89;
		D勾配[0][ 60] = 2.0; D勾配[1][ 60] = 1.95;
		D勾配[0][ 61] = 2.1; D勾配[1][ 61] = 2.01;
		D勾配[0][ 62] = 2.2; D勾配[1][ 62] = 2.08;
		D勾配[0][ 63] = 2.3; D勾配[1][ 63] = 2.15;
		D勾配[0][ 64] = 2.4; D勾配[1][ 64] = 2.22;
		D勾配[0][ 65] = 2.5; D勾配[1][ 65] = 2.29;
		D勾配[0][ 66] = 2.6; D勾配[1][ 66] = 2.38;
		D勾配[0][ 67] = 2.7; D勾配[1][ 67] = 2.47;
		D勾配[0][ 68] = 2.8; D勾配[1][ 68] = 2.56;
		D勾配[0][ 69] = 2.9; D勾配[1][ 69] = 2.67;
		D勾配[0][ 70] = 3.0; D勾配[1][ 70] = 2.79;
		D勾配[0][ 71] = 3.1; D勾配[1][ 71] = 2.92;
		D勾配[0][ 72] = 3.2; D勾配[1][ 72] = 3.06;
		D勾配[0][ 73] = 3.3; D勾配[1][ 73] = 3.22;
		D勾配[0][ 74] = 3.4; D勾配[1][ 74] = 3.4;
		D勾配[0][ 75] = 3.5; D勾配[1][ 75] = 3.6;
		D勾配[0][ 76] = 3.6; D勾配[1][ 76] = 3.84;
		D勾配[0][ 77] = 3.7; D勾配[1][ 77] = 4.1;
		D勾配[0][ 78] = 3.8; D勾配[1][ 78] = 4.4;
		D勾配[0][ 79] = 3.9; D勾配[1][ 79] = 4.75;
		D勾配[0][ 80] = 4.0; D勾配[1][ 80] = 5.14;

		D入力勾配 = Math.round( D入力勾配 * 10 ) / 10;
		tempA = 999;
		for( tempB = 0 ; tempB <= 80 ; tempB++){
			if( D入力勾配 == D勾配[0][tempB] ){// Then
				tempA = D勾配[1][tempB];
			}//if End If
		}//for Next
//    'エラー処理--------
		if( tempA == 999 ){//Then
			db.debugError("error:A01縦断H20Class:縦断；F勾配24L60；勾配=" + D入力勾配);//MsgBox
        //MsgBox "縦断；F勾配24L60；勾配=" & D入力勾配
		}//if End If
		return tempA;//F勾配24L60 = 
/*Private Function F勾配24L60(D入力勾配 As Double) As Double
    Dim D勾配(1, 80) As Double
    Dim tempA As Double
    Dim tempB As Long
    '勾配定義
    D勾配(0, 0) = -4: D勾配(1, 0) = 0.32
    D勾配(0, 1) = -3.9: D勾配(1, 1) = 0.34
    D勾配(0, 2) = -3.8: D勾配(1, 2) = 0.35
    D勾配(0, 3) = -3.7: D勾配(1, 3) = 0.37
    D勾配(0, 4) = -3.6: D勾配(1, 4) = 0.38
    D勾配(0, 5) = -3.5: D勾配(1, 5) = 0.39
    D勾配(0, 6) = -3.4: D勾配(1, 6) = 0.4
    D勾配(0, 7) = -3.3: D勾配(1, 7) = 0.41
    D勾配(0, 8) = -3.2: D勾配(1, 8) = 0.42
    D勾配(0, 9) = -3.1: D勾配(1, 9) = 0.43
    D勾配(0, 10) = -3: D勾配(1, 10) = 0.44
    D勾配(0, 11) = -2.9: D勾配(1, 11) = 0.45
    D勾配(0, 12) = -2.8: D勾配(1, 12) = 0.46
    D勾配(0, 13) = -2.7: D勾配(1, 13) = 0.47
    D勾配(0, 14) = -2.6: D勾配(1, 14) = 0.49
    D勾配(0, 15) = -2.5: D勾配(1, 15) = 0.5
    D勾配(0, 16) = -2.4: D勾配(1, 16) = 0.51
    D勾配(0, 17) = -2.3: D勾配(1, 17) = 0.53
    D勾配(0, 18) = -2.2: D勾配(1, 18) = 0.54
    D勾配(0, 19) = -2.1: D勾配(1, 19) = 0.56
    D勾配(0, 20) = -2: D勾配(1, 20) = 0.58
    D勾配(0, 21) = -1.9: D勾配(1, 21) = 0.59
    D勾配(0, 22) = -1.8: D勾配(1, 22) = 0.61
    D勾配(0, 23) = -1.7: D勾配(1, 23) = 0.63
    D勾配(0, 24) = -1.6: D勾配(1, 24) = 0.65
    D勾配(0, 25) = -1.5: D勾配(1, 25) = 0.67
    D勾配(0, 26) = -1.4: D勾配(1, 26) = 0.69
    D勾配(0, 27) = -1.3: D勾配(1, 27) = 0.71
    D勾配(0, 28) = -1.2: D勾配(1, 28) = 0.73
    D勾配(0, 29) = -1.1: D勾配(1, 29) = 0.75
    D勾配(0, 30) = -1: D勾配(1, 30) = 0.78
    D勾配(0, 31) = -0.9: D勾配(1, 31) = 0.8
    D勾配(0, 32) = -0.8: D勾配(1, 32) = 0.82
    D勾配(0, 33) = -0.7: D勾配(1, 33) = 0.84
    D勾配(0, 34) = -0.6: D勾配(1, 34) = 0.87
    D勾配(0, 35) = -0.5: D勾配(1, 35) = 0.89
    D勾配(0, 36) = -0.4: D勾配(1, 36) = 0.91
    D勾配(0, 37) = -0.3: D勾配(1, 37) = 0.93
    D勾配(0, 38) = -0.2: D勾配(1, 38) = 0.96
    D勾配(0, 39) = -0.1: D勾配(1, 39) = 0.98
    D勾配(0, 40) = 0: D勾配(1, 40) = 1
    D勾配(0, 41) = 0.1: D勾配(1, 41) = 1.03
    D勾配(0, 42) = 0.2: D勾配(1, 42) = 1.07
    D勾配(0, 43) = 0.3: D勾配(1, 43) = 1.11
    D勾配(0, 44) = 0.4: D勾配(1, 44) = 1.15
    D勾配(0, 45) = 0.5: D勾配(1, 45) = 1.19
    D勾配(0, 46) = 0.6: D勾配(1, 46) = 1.24
    D勾配(0, 47) = 0.7: D勾配(1, 47) = 1.28
    D勾配(0, 48) = 0.8: D勾配(1, 48) = 1.32
    D勾配(0, 49) = 0.9: D勾配(1, 49) = 1.37
    D勾配(0, 50) = 1: D勾配(1, 50) = 1.42
    D勾配(0, 51) = 1.1: D勾配(1, 51) = 1.46
    D勾配(0, 52) = 1.2: D勾配(1, 52) = 1.51
    D勾配(0, 53) = 1.3: D勾配(1, 53) = 1.56
    D勾配(0, 54) = 1.4: D勾配(1, 54) = 1.61
    D勾配(0, 55) = 1.5: D勾配(1, 55) = 1.67
    D勾配(0, 56) = 1.6: D勾配(1, 56) = 1.72
    D勾配(0, 57) = 1.7: D勾配(1, 57) = 1.77
    D勾配(0, 58) = 1.8: D勾配(1, 58) = 1.83
    D勾配(0, 59) = 1.9: D勾配(1, 59) = 1.89
    D勾配(0, 60) = 2: D勾配(1, 60) = 1.95
    D勾配(0, 61) = 2.1: D勾配(1, 61) = 2.01
    D勾配(0, 62) = 2.2: D勾配(1, 62) = 2.08
    D勾配(0, 63) = 2.3: D勾配(1, 63) = 2.15
    D勾配(0, 64) = 2.4: D勾配(1, 64) = 2.22
    D勾配(0, 65) = 2.5: D勾配(1, 65) = 2.29
    D勾配(0, 66) = 2.6: D勾配(1, 66) = 2.38
    D勾配(0, 67) = 2.7: D勾配(1, 67) = 2.47
    D勾配(0, 68) = 2.8: D勾配(1, 68) = 2.56
    D勾配(0, 69) = 2.9: D勾配(1, 69) = 2.67
    D勾配(0, 70) = 3: D勾配(1, 70) = 2.79
    D勾配(0, 71) = 3.1: D勾配(1, 71) = 2.92
    D勾配(0, 72) = 3.2: D勾配(1, 72) = 3.06
    D勾配(0, 73) = 3.3: D勾配(1, 73) = 3.22
    D勾配(0, 74) = 3.4: D勾配(1, 74) = 3.4
    D勾配(0, 75) = 3.5: D勾配(1, 75) = 3.6
    D勾配(0, 76) = 3.6: D勾配(1, 76) = 3.84
    D勾配(0, 77) = 3.7: D勾配(1, 77) = 4.1
    D勾配(0, 78) = 3.8: D勾配(1, 78) = 4.4
    D勾配(0, 79) = 3.9: D勾配(1, 79) = 4.75
    D勾配(0, 80) = 4: D勾配(1, 80) = 5.14
    
    D入力勾配 = Round(D入力勾配, 1)
    tempA = 999
    For tempB = 0 To 80
        If D入力勾配 = D勾配(0, tempB) Then
            tempA = D勾配(1, tempB)
        End If
    Next
    F勾配24L60 = tempA
    'エラー処理--------
    If tempA = 999 Then
        MsgBox "縦断；F勾配24L60；勾配=" & D入力勾配
    End If
End Function */
	}//F勾配24L60
	private double F勾配24L70( double D入力勾配 ){//F勾配24L70 コード開始
		double[][] D勾配 =new double[1+1][80+1];//Dim  As Double
		double tempA;//Dim  As Double
		int tempB;//Dim  As Long-> int 20200209
//    '勾配定義
		D勾配[0][ 0] = -4; D勾配[1][ 0] = 0.32;
		D勾配[0][ 1] = -3.9; D勾配[1][ 1] = 0.34;
		D勾配[0][ 2] = -3.8; D勾配[1][ 2] = 0.35;
		D勾配[0][ 3] = -3.7; D勾配[1][ 3] = 0.37;
		D勾配[0][ 4] = -3.6; D勾配[1][ 4] = 0.38;
		D勾配[0][ 5] = -3.5; D勾配[1][ 5] = 0.39;
		D勾配[0][ 6] = -3.4; D勾配[1][ 6] = 0.4;
		D勾配[0][ 7] = -3.3; D勾配[1][ 7] = 0.41;
		D勾配[0][ 8] = -3.2; D勾配[1][ 8] = 0.42;
		D勾配[0][ 9] = -3.1; D勾配[1][ 9] = 0.43;
		D勾配[0][ 10] = -3.0; D勾配[1][ 10] = 0.44;
		D勾配[0][ 11] = -2.9; D勾配[1][ 11] = 0.45;
		D勾配[0][ 12] = -2.8; D勾配[1][ 12] = 0.46;
		D勾配[0][ 13] = -2.7; D勾配[1][ 13] = 0.47;
		D勾配[0][ 14] = -2.6; D勾配[1][ 14] = 0.49;
		D勾配[0][ 15] = -2.5; D勾配[1][ 15] = 0.5;
		D勾配[0][ 16] = -2.4; D勾配[1][ 16] = 0.51;
		D勾配[0][ 17] = -2.3; D勾配[1][ 17] = 0.53;
		D勾配[0][ 18] = -2.2; D勾配[1][ 18] = 0.54;
		D勾配[0][ 19] = -2.1; D勾配[1][ 19] = 0.56;
		D勾配[0][ 20] = -2.0; D勾配[1][ 20] = 0.58;
		D勾配[0][ 21] = -1.9; D勾配[1][ 21] = 0.59;
		D勾配[0][ 22] = -1.8; D勾配[1][ 22] = 0.61;
		D勾配[0][ 23] = -1.7; D勾配[1][ 23] = 0.63;
		D勾配[0][ 24] = -1.6; D勾配[1][ 24] = 0.65;
		D勾配[0][ 25] = -1.5; D勾配[1][ 25] = 0.67;
		D勾配[0][ 26] = -1.4; D勾配[1][ 26] = 0.69;
		D勾配[0][ 27] = -1.3; D勾配[1][ 27] = 0.71;
		D勾配[0][ 28] = -1.2; D勾配[1][ 28] = 0.73;
		D勾配[0][ 29] = -1.1; D勾配[1][ 29] = 0.75;
		D勾配[0][ 30] = -1.0; D勾配[1][ 30] = 0.78;
		D勾配[0][ 31] = -0.9; D勾配[1][ 31] = 0.8;
		D勾配[0][ 32] = -0.8; D勾配[1][ 32] = 0.82;
		D勾配[0][ 33] = -0.7; D勾配[1][ 33] = 0.84;
		D勾配[0][ 34] = -0.6; D勾配[1][ 34] = 0.87;
		D勾配[0][ 35] = -0.5; D勾配[1][ 35] = 0.89;
		D勾配[0][ 36] = -0.4; D勾配[1][ 36] = 0.91;
		D勾配[0][ 37] = -0.3; D勾配[1][ 37] = 0.93;
		D勾配[0][ 38] = -0.2; D勾配[1][ 38] = 0.96;
		D勾配[0][ 39] = -0.1; D勾配[1][ 39] = 0.98;
		D勾配[0][ 40] = 0.0; D勾配[1][ 40] = 1.0;
		D勾配[0][ 41] = 0.1; D勾配[1][ 41] = 1.03;
		D勾配[0][ 42] = 0.2; D勾配[1][ 42] = 1.07;
		D勾配[0][ 43] = 0.3; D勾配[1][ 43] = 1.11;
		D勾配[0][ 44] = 0.4; D勾配[1][ 44] = 1.15;
		D勾配[0][ 45] = 0.5; D勾配[1][ 45] = 1.19;
		D勾配[0][ 46] = 0.6; D勾配[1][ 46] = 1.24;
		D勾配[0][ 47] = 0.7; D勾配[1][ 47] = 1.28;
		D勾配[0][ 48] = 0.8; D勾配[1][ 48] = 1.32;
		D勾配[0][ 49] = 0.9; D勾配[1][ 49] = 1.37;
		D勾配[0][ 50] = 1.0; D勾配[1][ 50] = 1.42;
		D勾配[0][ 51] = 1.1; D勾配[1][ 51] = 1.46;
		D勾配[0][ 52] = 1.2; D勾配[1][ 52] = 1.51;
		D勾配[0][ 53] = 1.3; D勾配[1][ 53] = 1.56;
		D勾配[0][ 54] = 1.4; D勾配[1][ 54] = 1.61;
		D勾配[0][ 55] = 1.5; D勾配[1][ 55] = 1.67;
		D勾配[0][ 56] = 1.6; D勾配[1][ 56] = 1.72;
		D勾配[0][ 57] = 1.7; D勾配[1][ 57] = 1.77;
		D勾配[0][ 58] = 1.8; D勾配[1][ 58] = 1.83;
		D勾配[0][ 59] = 1.9; D勾配[1][ 59] = 1.89;
		D勾配[0][ 60] = 2.0; D勾配[1][ 60] = 1.95;
		D勾配[0][ 61] = 2.1; D勾配[1][ 61] = 2.01;
		D勾配[0][ 62] = 2.2; D勾配[1][ 62] = 2.08;
		D勾配[0][ 63] = 2.3; D勾配[1][ 63] = 2.15;
		D勾配[0][ 64] = 2.4; D勾配[1][ 64] = 2.22;
		D勾配[0][ 65] = 2.5; D勾配[1][ 65] = 2.3;
		D勾配[0][ 66] = 2.6; D勾配[1][ 66] = 2.39;
		D勾配[0][ 67] = 2.7; D勾配[1][ 67] = 2.49;
		D勾配[0][ 68] = 2.8; D勾配[1][ 68] = 2.59;
		D勾配[0][ 69] = 2.9; D勾配[1][ 69] = 2.71;
		D勾配[0][ 70] = 3.0; D勾配[1][ 70] = 2.84;
		D勾配[0][ 71] = 3.1; D勾配[1][ 71] = 2.98;
		D勾配[0][ 72] = 3.2; D勾配[1][ 72] = 3.14;
		D勾配[0][ 73] = 3.3; D勾配[1][ 73] = 3.33;
		D勾配[0][ 74] = 3.4; D勾配[1][ 74] = 3.53;
		D勾配[0][ 75] = 3.5; D勾配[1][ 75] = 3.77;

		D入力勾配 = Math.round(D入力勾配*10)/10;
		tempA = 999;
		for( tempB = 0 ; tempB <= 75 ; tempB++){ 
			if( D入力勾配 == D勾配[0][tempB] ){// Then
				tempA = D勾配[1][tempB];
			}//if End If
		}//for Next
//    'エラー処理--------
		if( tempA == 999 ){ // Then
			db.debugError("error:A01縦断H20Class:縦断；F勾配24L70；勾配=" + D入力勾配);//MsgBox
			// MsgBox "縦断；F勾配24L70；勾配=" & D入力勾配
		}//if End If
		return tempA;//F勾配24L70 = 
/*Private Function F勾配24L70(D入力勾配 As Double) As Double
    Dim D勾配(1, 80) As Double
    Dim tempA As Double
    Dim tempB As Long
    '勾配定義
    D勾配(0, 0) = -4: D勾配(1, 0) = 0.32
    D勾配(0, 1) = -3.9: D勾配(1, 1) = 0.34
    D勾配(0, 2) = -3.8: D勾配(1, 2) = 0.35
    D勾配(0, 3) = -3.7: D勾配(1, 3) = 0.37
    D勾配(0, 4) = -3.6: D勾配(1, 4) = 0.38
    D勾配(0, 5) = -3.5: D勾配(1, 5) = 0.39
    D勾配(0, 6) = -3.4: D勾配(1, 6) = 0.4
    D勾配(0, 7) = -3.3: D勾配(1, 7) = 0.41
    D勾配(0, 8) = -3.2: D勾配(1, 8) = 0.42
    D勾配(0, 9) = -3.1: D勾配(1, 9) = 0.43
    D勾配(0, 10) = -3: D勾配(1, 10) = 0.44
    D勾配(0, 11) = -2.9: D勾配(1, 11) = 0.45
    D勾配(0, 12) = -2.8: D勾配(1, 12) = 0.46
    D勾配(0, 13) = -2.7: D勾配(1, 13) = 0.47
    D勾配(0, 14) = -2.6: D勾配(1, 14) = 0.49
    D勾配(0, 15) = -2.5: D勾配(1, 15) = 0.5
    D勾配(0, 16) = -2.4: D勾配(1, 16) = 0.51
    D勾配(0, 17) = -2.3: D勾配(1, 17) = 0.53
    D勾配(0, 18) = -2.2: D勾配(1, 18) = 0.54
    D勾配(0, 19) = -2.1: D勾配(1, 19) = 0.56
    D勾配(0, 20) = -2: D勾配(1, 20) = 0.58
    D勾配(0, 21) = -1.9: D勾配(1, 21) = 0.59
    D勾配(0, 22) = -1.8: D勾配(1, 22) = 0.61
    D勾配(0, 23) = -1.7: D勾配(1, 23) = 0.63
    D勾配(0, 24) = -1.6: D勾配(1, 24) = 0.65
    D勾配(0, 25) = -1.5: D勾配(1, 25) = 0.67
    D勾配(0, 26) = -1.4: D勾配(1, 26) = 0.69
    D勾配(0, 27) = -1.3: D勾配(1, 27) = 0.71
    D勾配(0, 28) = -1.2: D勾配(1, 28) = 0.73
    D勾配(0, 29) = -1.1: D勾配(1, 29) = 0.75
    D勾配(0, 30) = -1: D勾配(1, 30) = 0.78
    D勾配(0, 31) = -0.9: D勾配(1, 31) = 0.8
    D勾配(0, 32) = -0.8: D勾配(1, 32) = 0.82
    D勾配(0, 33) = -0.7: D勾配(1, 33) = 0.84
    D勾配(0, 34) = -0.6: D勾配(1, 34) = 0.87
    D勾配(0, 35) = -0.5: D勾配(1, 35) = 0.89
    D勾配(0, 36) = -0.4: D勾配(1, 36) = 0.91
    D勾配(0, 37) = -0.3: D勾配(1, 37) = 0.93
    D勾配(0, 38) = -0.2: D勾配(1, 38) = 0.96
    D勾配(0, 39) = -0.1: D勾配(1, 39) = 0.98
    D勾配(0, 40) = 0: D勾配(1, 40) = 1
    D勾配(0, 41) = 0.1: D勾配(1, 41) = 1.03
    D勾配(0, 42) = 0.2: D勾配(1, 42) = 1.07
    D勾配(0, 43) = 0.3: D勾配(1, 43) = 1.11
    D勾配(0, 44) = 0.4: D勾配(1, 44) = 1.15
    D勾配(0, 45) = 0.5: D勾配(1, 45) = 1.19
    D勾配(0, 46) = 0.6: D勾配(1, 46) = 1.24
    D勾配(0, 47) = 0.7: D勾配(1, 47) = 1.28
    D勾配(0, 48) = 0.8: D勾配(1, 48) = 1.32
    D勾配(0, 49) = 0.9: D勾配(1, 49) = 1.37
    D勾配(0, 50) = 1: D勾配(1, 50) = 1.42
    D勾配(0, 51) = 1.1: D勾配(1, 51) = 1.46
    D勾配(0, 52) = 1.2: D勾配(1, 52) = 1.51
    D勾配(0, 53) = 1.3: D勾配(1, 53) = 1.56
    D勾配(0, 54) = 1.4: D勾配(1, 54) = 1.61
    D勾配(0, 55) = 1.5: D勾配(1, 55) = 1.67
    D勾配(0, 56) = 1.6: D勾配(1, 56) = 1.72
    D勾配(0, 57) = 1.7: D勾配(1, 57) = 1.77
    D勾配(0, 58) = 1.8: D勾配(1, 58) = 1.83
    D勾配(0, 59) = 1.9: D勾配(1, 59) = 1.89
    D勾配(0, 60) = 2: D勾配(1, 60) = 1.95
    D勾配(0, 61) = 2.1: D勾配(1, 61) = 2.01
    D勾配(0, 62) = 2.2: D勾配(1, 62) = 2.08
    D勾配(0, 63) = 2.3: D勾配(1, 63) = 2.15
    D勾配(0, 64) = 2.4: D勾配(1, 64) = 2.22
    D勾配(0, 65) = 2.5: D勾配(1, 65) = 2.3
    D勾配(0, 66) = 2.6: D勾配(1, 66) = 2.39
    D勾配(0, 67) = 2.7: D勾配(1, 67) = 2.49
    D勾配(0, 68) = 2.8: D勾配(1, 68) = 2.59
    D勾配(0, 69) = 2.9: D勾配(1, 69) = 2.71
    D勾配(0, 70) = 3: D勾配(1, 70) = 2.84
    D勾配(0, 71) = 3.1: D勾配(1, 71) = 2.98
    D勾配(0, 72) = 3.2: D勾配(1, 72) = 3.14
    D勾配(0, 73) = 3.3: D勾配(1, 73) = 3.33
    D勾配(0, 74) = 3.4: D勾配(1, 74) = 3.53
    D勾配(0, 75) = 3.5: D勾配(1, 75) = 3.77
    
    D入力勾配 = Round(D入力勾配, 1)
    tempA = 999
    For tempB = 0 To 75
        If D入力勾配 = D勾配(0, tempB) Then
            tempA = D勾配(1, tempB)
        End If
    Next
    F勾配24L70 = tempA
    'エラー処理--------
    If tempA = 999 Then
        MsgBox "縦断；F勾配24L70；勾配=" & D入力勾配
    End If
End Function */
	}//F勾配24L70
	private double F勾配24L80( double D入力勾配 ){//F勾配24L80 コード開始
		double[][] D勾配 = new double [1+1][80+1];//Dim  As Double
		double tempA;//Dim As Double
		int tempB;//Dim  As Long->int 20200209 
//    '勾配定義
		D勾配[0][ 0] = -4.0; D勾配[1][ 0] = 0.32;
		D勾配[0][ 1] = -3.9; D勾配[1][ 1] = 0.34;
		D勾配[0][ 2] = -3.8; D勾配[1][ 2] = 0.35;
		D勾配[0][ 3] = -3.7; D勾配[1][ 3] = 0.37;
		D勾配[0][ 4] = -3.6; D勾配[1][ 4] = 0.38;
		D勾配[0][ 5] = -3.5; D勾配[1][ 5] = 0.39;
		D勾配[0][ 6] = -3.4; D勾配[1][ 6] = 0.4;
		D勾配[0][ 7] = -3.3; D勾配[1][ 7] = 0.41;
		D勾配[0][ 8] = -3.2; D勾配[1][ 8] = 0.42;
		D勾配[0][ 9] = -3.1; D勾配[1][ 9] = 0.43;
		D勾配[0][ 10] = -3.0; D勾配[1][ 10] = 0.44;
		D勾配[0][ 11] = -2.9; D勾配[1][ 11] = 0.45;
		D勾配[0][ 12] = -2.8; D勾配[1][ 12] = 0.46;
		D勾配[0][ 13] = -2.7; D勾配[1][ 13] = 0.47;
		D勾配[0][ 14] = -2.6; D勾配[1][ 14] = 0.49;
		D勾配[0][ 15] = -2.5; D勾配[1][ 15] = 0.5;
		D勾配[0][ 16] = -2.4; D勾配[1][ 16] = 0.51;
		D勾配[0][ 17] = -2.3; D勾配[1][ 17] = 0.53;
		D勾配[0][ 18] = -2.2; D勾配[1][ 18] = 0.54;
		D勾配[0][ 19] = -2.1; D勾配[1][ 19] = 0.56;
		D勾配[0][ 20] = -2.0; D勾配[1][ 20] = 0.58;
		D勾配[0][ 21] = -1.9; D勾配[1][ 21] = 0.59;
		D勾配[0][ 22] = -1.8; D勾配[1][ 22] = 0.61;
		D勾配[0][ 23] = -1.7; D勾配[1][ 23] = 0.63;
		D勾配[0][ 24] = -1.6; D勾配[1][ 24] = 0.65;
		D勾配[0][ 25] = -1.5; D勾配[1][ 25] = 0.67;
		D勾配[0][ 26] = -1.4; D勾配[1][ 26] = 0.69;
		D勾配[0][ 27] = -1.3; D勾配[1][ 27] = 0.71;
		D勾配[0][ 28] = -1.2; D勾配[1][ 28] = 0.73;
		D勾配[0][ 29] = -1.1; D勾配[1][ 29] = 0.75;
		D勾配[0][ 30] = -1.0; D勾配[1][ 30] = 0.78;
		D勾配[0][ 31] = -0.9; D勾配[1][ 31] = 0.8;
		D勾配[0][ 32] = -0.8; D勾配[1][ 32] = 0.82;
		D勾配[0][ 33] = -0.7; D勾配[1][ 33] = 0.84;
		D勾配[0][ 34] = -0.6; D勾配[1][ 34] = 0.87;
		D勾配[0][ 35] = -0.5; D勾配[1][ 35] = 0.89;
		D勾配[0][ 36] = -0.4; D勾配[1][ 36] = 0.91;
		D勾配[0][ 37] = -0.3; D勾配[1][ 37] = 0.93;
		D勾配[0][ 38] = -0.2; D勾配[1][ 38] = 0.96;
		D勾配[0][ 39] = -0.1; D勾配[1][ 39] = 0.98;
		D勾配[0][ 40] = 0.0; D勾配[1][ 40] = 1.0;
		D勾配[0][ 41] = 0.1; D勾配[1][ 41] = 1.03;
		D勾配[0][ 42] = 0.2; D勾配[1][ 42] = 1.07;
		D勾配[0][ 43] = 0.3; D勾配[1][ 43] = 1.11;
		D勾配[0][ 44] = 0.4; D勾配[1][ 44] = 1.15;
		D勾配[0][ 45] = 0.5; D勾配[1][ 45] = 1.19;
		D勾配[0][ 46] = 0.6; D勾配[1][ 46] = 1.24;
		D勾配[0][ 47] = 0.7; D勾配[1][ 47] = 1.28;
		D勾配[0][ 48] = 0.8; D勾配[1][ 48] = 1.32;
		D勾配[0][ 49] = 0.9; D勾配[1][ 49] = 1.37;
		D勾配[0][ 50] = 1.0; D勾配[1][ 50] = 1.42;
		D勾配[0][ 51] = 1.1; D勾配[1][ 51] = 1.46;
		D勾配[0][ 52] = 1.2; D勾配[1][ 52] = 1.51;
		D勾配[0][ 53] = 1.3; D勾配[1][ 53] = 1.56;
		D勾配[0][ 54] = 1.4; D勾配[1][ 54] = 1.61;
		D勾配[0][ 55] = 1.5; D勾配[1][ 55] = 1.67;
		D勾配[0][ 56] = 1.6; D勾配[1][ 56] = 1.72;
		D勾配[0][ 57] = 1.7; D勾配[1][ 57] = 1.77;
		D勾配[0][ 58] = 1.8; D勾配[1][ 58] = 1.83;
		D勾配[0][ 59] = 1.9; D勾配[1][ 59] = 1.89;
		D勾配[0][ 60] = 2.0; D勾配[1][ 60] = 1.95;
		D勾配[0][ 61] = 2.1; D勾配[1][ 61] = 2.01;
		D勾配[0][ 62] = 2.2; D勾配[1][ 62] = 2.08;
		D勾配[0][ 63] = 2.3; D勾配[1][ 63] = 2.15;
		D勾配[0][ 64] = 2.4; D勾配[1][ 64] = 2.22;
		D勾配[0][ 65] = 2.5; D勾配[1][ 65] = 2.32;
		D勾配[0][ 66] = 2.6; D勾配[1][ 66] = 2.41;
		D勾配[0][ 67] = 2.7; D勾配[1][ 67] = 2.52;
		D勾配[0][ 68] = 2.8; D勾配[1][ 68] = 2.64;
		D勾配[0][ 69] = 2.9; D勾配[1][ 69] = 2.78;
		D勾配[0][ 70] = 3.0; D勾配[1][ 70] = 2.93;

		D入力勾配 = Math.round(D入力勾配*10)/10;
		tempA = 999;
		for( tempB = 0 ; tempB <= 70 ; tempB++){
			if( D入力勾配 == D勾配[0][tempB] ){// Then
				tempA = D勾配[1][tempB];
			}//if End If
		}//for Next
 //   'エラー処理--------
		if( tempA == 999 ){ // Then
			db.debugError("error:A01縦断H20Class:縦断；F勾配24L80；勾配=" + D入力勾配);//MsgBox
			//MsgBox "縦断；F勾配24L80；勾配=" & D入力勾配
		}//if End If
		return tempA;//F勾配24L80 =
/*Private Function F勾配24L80(D入力勾配 As Double) As Double
    Dim D勾配(1, 80) As Double
    Dim tempA As Double
    Dim tempB As Long
    '勾配定義
    D勾配(0, 0) = -4: D勾配(1, 0) = 0.32
    D勾配(0, 1) = -3.9: D勾配(1, 1) = 0.34
    D勾配(0, 2) = -3.8: D勾配(1, 2) = 0.35
    D勾配(0, 3) = -3.7: D勾配(1, 3) = 0.37
    D勾配(0, 4) = -3.6: D勾配(1, 4) = 0.38
    D勾配(0, 5) = -3.5: D勾配(1, 5) = 0.39
    D勾配(0, 6) = -3.4: D勾配(1, 6) = 0.4
    D勾配(0, 7) = -3.3: D勾配(1, 7) = 0.41
    D勾配(0, 8) = -3.2: D勾配(1, 8) = 0.42
    D勾配(0, 9) = -3.1: D勾配(1, 9) = 0.43
    D勾配(0, 10) = -3: D勾配(1, 10) = 0.44
    D勾配(0, 11) = -2.9: D勾配(1, 11) = 0.45
    D勾配(0, 12) = -2.8: D勾配(1, 12) = 0.46
    D勾配(0, 13) = -2.7: D勾配(1, 13) = 0.47
    D勾配(0, 14) = -2.6: D勾配(1, 14) = 0.49
    D勾配(0, 15) = -2.5: D勾配(1, 15) = 0.5
    D勾配(0, 16) = -2.4: D勾配(1, 16) = 0.51
    D勾配(0, 17) = -2.3: D勾配(1, 17) = 0.53
    D勾配(0, 18) = -2.2: D勾配(1, 18) = 0.54
    D勾配(0, 19) = -2.1: D勾配(1, 19) = 0.56
    D勾配(0, 20) = -2: D勾配(1, 20) = 0.58
    D勾配(0, 21) = -1.9: D勾配(1, 21) = 0.59
    D勾配(0, 22) = -1.8: D勾配(1, 22) = 0.61
    D勾配(0, 23) = -1.7: D勾配(1, 23) = 0.63
    D勾配(0, 24) = -1.6: D勾配(1, 24) = 0.65
    D勾配(0, 25) = -1.5: D勾配(1, 25) = 0.67
    D勾配(0, 26) = -1.4: D勾配(1, 26) = 0.69
    D勾配(0, 27) = -1.3: D勾配(1, 27) = 0.71
    D勾配(0, 28) = -1.2: D勾配(1, 28) = 0.73
    D勾配(0, 29) = -1.1: D勾配(1, 29) = 0.75
    D勾配(0, 30) = -1: D勾配(1, 30) = 0.78
    D勾配(0, 31) = -0.9: D勾配(1, 31) = 0.8
    D勾配(0, 32) = -0.8: D勾配(1, 32) = 0.82
    D勾配(0, 33) = -0.7: D勾配(1, 33) = 0.84
    D勾配(0, 34) = -0.6: D勾配(1, 34) = 0.87
    D勾配(0, 35) = -0.5: D勾配(1, 35) = 0.89
    D勾配(0, 36) = -0.4: D勾配(1, 36) = 0.91
    D勾配(0, 37) = -0.3: D勾配(1, 37) = 0.93
    D勾配(0, 38) = -0.2: D勾配(1, 38) = 0.96
    D勾配(0, 39) = -0.1: D勾配(1, 39) = 0.98
    D勾配(0, 40) = 0: D勾配(1, 40) = 1
    D勾配(0, 41) = 0.1: D勾配(1, 41) = 1.03
    D勾配(0, 42) = 0.2: D勾配(1, 42) = 1.07
    D勾配(0, 43) = 0.3: D勾配(1, 43) = 1.11
    D勾配(0, 44) = 0.4: D勾配(1, 44) = 1.15
    D勾配(0, 45) = 0.5: D勾配(1, 45) = 1.19
    D勾配(0, 46) = 0.6: D勾配(1, 46) = 1.24
    D勾配(0, 47) = 0.7: D勾配(1, 47) = 1.28
    D勾配(0, 48) = 0.8: D勾配(1, 48) = 1.32
    D勾配(0, 49) = 0.9: D勾配(1, 49) = 1.37
    D勾配(0, 50) = 1: D勾配(1, 50) = 1.42
    D勾配(0, 51) = 1.1: D勾配(1, 51) = 1.46
    D勾配(0, 52) = 1.2: D勾配(1, 52) = 1.51
    D勾配(0, 53) = 1.3: D勾配(1, 53) = 1.56
    D勾配(0, 54) = 1.4: D勾配(1, 54) = 1.61
    D勾配(0, 55) = 1.5: D勾配(1, 55) = 1.67
    D勾配(0, 56) = 1.6: D勾配(1, 56) = 1.72
    D勾配(0, 57) = 1.7: D勾配(1, 57) = 1.77
    D勾配(0, 58) = 1.8: D勾配(1, 58) = 1.83
    D勾配(0, 59) = 1.9: D勾配(1, 59) = 1.89
    D勾配(0, 60) = 2: D勾配(1, 60) = 1.95
    D勾配(0, 61) = 2.1: D勾配(1, 61) = 2.01
    D勾配(0, 62) = 2.2: D勾配(1, 62) = 2.08
    D勾配(0, 63) = 2.3: D勾配(1, 63) = 2.15
    D勾配(0, 64) = 2.4: D勾配(1, 64) = 2.22
    D勾配(0, 65) = 2.5: D勾配(1, 65) = 2.32
    D勾配(0, 66) = 2.6: D勾配(1, 66) = 2.41
    D勾配(0, 67) = 2.7: D勾配(1, 67) = 2.52
    D勾配(0, 68) = 2.8: D勾配(1, 68) = 2.64
    D勾配(0, 69) = 2.9: D勾配(1, 69) = 2.78
    D勾配(0, 70) = 3: D勾配(1, 70) = 2.93
    
    D入力勾配 = Round(D入力勾配, 1)
    tempA = 999
    For tempB = 0 To 70
        If D入力勾配 = D勾配(0, tempB) Then
            tempA = D勾配(1, tempB)
        End If
    Next
    F勾配24L80 = tempA
    'エラー処理--------
    If tempA = 999 Then
        MsgBox "縦断；F勾配24L80；勾配=" & D入力勾配
    End If
End Function*/
	}//F勾配24L80
	public void A01勾配補正係数S( double[][] nD勾配補正係数S ){ //ByRef As Double)
		int i;//Dim  As Integer
		int ii;//Dim As Integer
//    '年度ごとの出力決定
    if( 20 <= GI供用年度 && GI供用年度 <= 24 ){//Then
        for( ii = 0 ; ii < C上下線 ; ii++){
            for( i = 0 ; i < C屈曲 ; i++){
                nD勾配補正係数S[ii][i] = GD勾配補正24S[ii][i];
            }//for i Next
        }//for ii Next
    }//if
    else if( GI供用年度 == 25 ){//Then
        for( ii = 0 ; ii < C上下線 ; ii++){
            for( i = 0 ; i < C屈曲 ; i++ ){
                nD勾配補正係数S[ii][i] = GD勾配補正25SL[ii][i];
            }//for i Next
        }//for ii Next
    }//else if 
    else{
		db.debugError("error:A01縦断H20Class:勾配；速度補正；供用年度=" + GI供用年度);//MsgBox
        //MsgBox "勾配；速度補正；供用年度=" & GI供用年度
    }//else End If
//End Sub
		
/*01勾配補正係数S'---------------------
'目的 勾配補正係数L
'日付 080706
'機能：配列の参照渡し
'---------------------
Public Sub A01勾配補正係数S( _
            ByRef nD勾配補正係数S() As Double)
    Dim i As Integer
    Dim ii As Integer
    '年度ごとの出力決定
    If 20 <= GI供用年度 And GI供用年度 <= 24 Then
        For ii = 0 To C上下線
            For i = 0 To C屈曲
                nD勾配補正係数S(ii, i) = GD勾配補正24S(ii, i)
            Next
        Next
    ElseIf GI供用年度 = 25 Then
        For ii = 0 To C上下線
            For i = 0 To C屈曲
                nD勾配補正係数S(ii, i) = GD勾配補正25SL(ii, i)
            Next
        Next
    Else
        MsgBox "勾配；速度補正；供用年度=" & GI供用年度
    End If
End Sub*/
	}//A01勾配補正係数S
	public void A01勾配補正係数L( double[][] nD勾配補正係数L ){ //配列の参照渡しなので、戻り値がない
		int i;//Dim  As Integer
		int ii;//Dim  As Integer
//    '年度ごとの出力決定
		if( 20 <= GI供用年度 && GI供用年度 <= 24 ){ //And Then
			for(ii = 0 ; ii <  C上下線 ; ii++){
				for( i = 0 ; i < C屈曲 ; i++){
					nD勾配補正係数L[ii][i] = GD勾配補正24L[ii][i];
				}//for i Next
			}//for ii Next
		}//if
		else if( GI供用年度 == 25 ){//Then
			for( ii = 0 ; ii < C上下線 ; ii++ ){
				for( i = 0 ; i < C屈曲 ; i++){
					nD勾配補正係数L[ii][i] = GD勾配補正25SL[ii][i];
				}//for i Next
			}//for ii Next
		}//else if
		else{
			db.debugError("error:A01縦断H20Class:勾配；速度補正；供用年度=" + GI供用年度);//MsgBox
			//MsgBox "勾配；速度補正；供用年度=" & GI供用年度
		}//else End If
/*A01勾配補正係数L
'---------------------
'目的 勾配補正係数L
'日付 080706
'機能：配列の参照渡し
'---------------------
Public Sub A01勾配補正係数L( _
            ByRef nD勾配補正係数L() As Double)
    Dim i As Integer
    Dim ii As Integer
    '年度ごとの出力決定
    If 20 <= GI供用年度 And GI供用年度 <= 24 Then
        For ii = 0 To C上下線
            For i = 0 To C屈曲
                nD勾配補正係数L(ii, i) = GD勾配補正24L(ii, i)
            Next
        Next
    ElseIf GI供用年度 = 25 Then
        For ii = 0 To C上下線
            For i = 0 To C屈曲
                nD勾配補正係数L(ii, i) = GD勾配補正25SL(ii, i)
            Next
        Next
    Else
        MsgBox "勾配；速度補正；供用年度=" & GI供用年度
    End If
End Sub */
	}//A01勾配補正係数L
	public double A02速度補正係数S(){
		if( 20 <= GI供用年度 && GI供用年度 <= 24 ){// Then
			db.debugPrint("A01縦断H20Class:縦断：供用年度=" + GI供用年度 );
			db.debugPrint("A01縦断H20Class:縦断：A02速度補正係数S=" + GD速度補正24S );
			return GD速度補正24S;//A02速度補正係数S =
		}//if 
		else if( GI供用年度 == 25 ){//Then
			db.debugPrint("A01縦断H20Class:縦断：供用年度=" + GI供用年度 );
			db.debugPrint("A01縦断H20Class:縦断：A02速度補正係数S=" + 1 );
			return 1;//A02速度補正係数S =
		}//else if 
		else{
			db.debugError("error:A01縦断H20Class:勾配；速度補正；供用年度=" + GI供用年度);//MsgBox
			return 999; 
			//MsgBox "勾配；速度補正；供用年度=" & GI供用年度
		}//else End If
/*A02速度補正係数S()
'---------------------
'目的 速度勾配補正係数の受け渡し　小型車
'日付 080706
'---------------------
Public Function A02速度補正係数S() As Double
    If 20 <= GI供用年度 And GI供用年度 <= 24 Then
        A02速度補正係数S = GD速度補正24S
    ElseIf GI供用年度 = 25 Then
        A02速度補正係数S = 1
    Else
        MsgBox "勾配；速度補正；供用年度=" & GI供用年度
    End If
End Function*/
	}//A02速度補正係数S()
	private double F勾配25SL(double D入力勾配 ){ // As Double
		double D勾配[][] = new double[1+1][16+1];//Dim  As Double
		double tempA;//Dim  As Double
		int tempB;//Dim  As Long -> int 
		//'勾配定義
		D勾配[0][ 0] = -4;   D勾配[1][ 0] = 0.25;
		D勾配[0][ 1] = -3.5; D勾配[1][ 1] = 0.34;
		D勾配[0][ 2] = -3;   D勾配[1][ 2] = 0.44;
		D勾配[0][ 3] = -2.5; D勾配[1][ 3] = 0.53;
		D勾配[0][ 4] = -2;   D勾配[1][ 4] = 0.62;
		D勾配[0][ 5] = -1.5; D勾配[1][ 5] = 0.72;
		D勾配[0][ 6] = -1;   D勾配[1][ 6] = 0.81;
		D勾配[0][ 7] = -0.5; D勾配[1][ 7] = 0.91;
		D勾配[0][ 8] = 0;    D勾配[1][ 8] = 1.0;
		D勾配[0][ 9] = 0.5;  D勾配[1][ 9] = 1.1;
		D勾配[0][ 10] = 1;   D勾配[1][ 10] = 1.19;
		D勾配[0][ 11] = 1.5; D勾配[1][ 11] = 1.29;
		D勾配[0][ 12] = 2;   D勾配[1][ 12] = 1.38;
		D勾配[0][ 13] = 2.5; D勾配[1][ 13] = 1.48;
		D勾配[0][ 14] = 3;   D勾配[1][ 14] = 1.58;
		D勾配[0][ 15] = 3.5; D勾配[1][ 15] = 1.67;
		D勾配[0][ 16] = 4;   D勾配[1][ 16] = 1.77;
		
		D入力勾配 = Math.round(D入力勾配 *10 ) / 10;
		tempA = 999;
		for( tempB = 0 ; tempB <= 16 ; tempB++ ){
			if( D入力勾配 == D勾配[0][tempB] ){//Then
				tempA = D勾配[1][tempB];
			}//if End If
		}//for Next
    //'エラー処理--------
		if( tempA == 999 ){//Then
			db.debugError("error:A01縦断H20Class:縦断；F勾配25SL；勾配=" + D入力勾配);//MsgBox
			//MsgBox "縦断；F勾配25SL；勾配=" & D入力勾配
		}//if End If
		return tempA;//F勾配25SL入
	//End Function
/*Private Function F勾配25SL(D入力勾配 As Double) As Double
    Dim D勾配(1, 16) As Double
    Dim tempA As Double
    Dim tempB As Long
    '勾配定義
    D勾配(0, 0) = -4:   D勾配(1, 0) = 0.25
    D勾配(0, 1) = -3.5: D勾配(1, 1) = 0.34
    D勾配(0, 2) = -3:   D勾配(1, 2) = 0.44
    D勾配(0, 3) = -2.5: D勾配(1, 3) = 0.53
    D勾配(0, 4) = -2:   D勾配(1, 4) = 0.62
    D勾配(0, 5) = -1.5: D勾配(1, 5) = 0.72
    D勾配(0, 6) = -1:   D勾配(1, 6) = 0.81
    D勾配(0, 7) = -0.5: D勾配(1, 7) = 0.91
    D勾配(0, 8) = 0:    D勾配(1, 8) = 1
    D勾配(0, 9) = 0.5:  D勾配(1, 9) = 1.1
    D勾配(0, 10) = 1:   D勾配(1, 10) = 1.19
    D勾配(0, 11) = 1.5: D勾配(1, 11) = 1.29
    D勾配(0, 12) = 2:   D勾配(1, 12) = 1.38
    D勾配(0, 13) = 2.5: D勾配(1, 13) = 1.48
    D勾配(0, 14) = 3:   D勾配(1, 14) = 1.58
    D勾配(0, 15) = 3.5: D勾配(1, 15) = 1.67
    D勾配(0, 16) = 4:   D勾配(1, 16) = 1.77
    
    D入力勾配 = Round(D入力勾配, 1)
    tempA = 999
    For tempB = 0 To 16
        If D入力勾配 = D勾配(0, tempB) Then
            tempA = D勾配(1, tempB)
        End If
    Next
    F勾配25SL = tempA
    'エラー処理--------
    If tempA = 999 Then
        MsgBox "縦断；F勾配25SL；勾配=" & D入力勾配
    End If
End Function
*/


	}//F勾配25SL
	private double F速度24S(double S速度){ //  S速度 As Long->もともとはlongであるが、呼出はdoubleである。型変換を行っている理由が不明。doubleとする20200214
		double[][] D小型車速度補正値 = new double[1+1][5+1];//Dim As Double
		double tempA;//Dim  As Double
		int tempB;//Dim  As Long ->20200214 long-> int 配列の添字なので、javaはintでなければならない
		//'速度定義
		D小型車速度補正値[0][ 0] = 40.0;
		D小型車速度補正値[0][ 1] = 50.0;
		D小型車速度補正値[0][ 2] = 60.0;
		D小型車速度補正値[0][ 3] = 70.0;
		D小型車速度補正値[0][ 4] = 80.0;
		D小型車速度補正値[0][ 5] = 100.0;
		//'補正係数定義
		D小型車速度補正値[1][ 0] = 0.92;
		D小型車速度補正値[1][ 1] = 0.96;
		D小型車速度補正値[1][ 2] = 1.0;
		D小型車速度補正値[1][ 3] = 1.05;
		D小型車速度補正値[1][ 4] = 1.11;
		D小型車速度補正値[1][ 5] = 1.27;
		//'補正値決定
		tempA = 999;
		for( tempB = 0 ; tempB <= 5 ; tempB++){
			if( S速度 == D小型車速度補正値[0][tempB] ){// Then
				tempA = D小型車速度補正値[1][tempB];
			}//if End If
		}//for Next
		//'エラー処理--------
		if( tempA == 999 ){//Then
			db.debugError("error:A01縦断H20Class:縦断；F速度24S；速度=" + S速度);//MsgBox
			//MsgBox "縦断；F速度24S；速度=" & S速度
		}//if End If
		return tempA;//F速度24S = 
		//End Function　*/
/*Private Function F速度24S(S速度 As Long) As Double
    Dim D小型車速度補正値(1, 5) As Double
    Dim tempA As Double
    Dim tempB As Long
    '速度定義
    D小型車速度補正値(0, 0) = 40
    D小型車速度補正値(0, 1) = 50
    D小型車速度補正値(0, 2) = 60
    D小型車速度補正値(0, 3) = 70
    D小型車速度補正値(0, 4) = 80
    D小型車速度補正値(0, 5) = 100
    '補正係数定義
    D小型車速度補正値(1, 0) = 0.92
    D小型車速度補正値(1, 1) = 0.96
    D小型車速度補正値(1, 2) = 1
    D小型車速度補正値(1, 3) = 1.05
    D小型車速度補正値(1, 4) = 1.11
    D小型車速度補正値(1, 5) = 1.27
    '補正値決定
    tempA = 999
    For tempB = 0 To 5
        If S速度 = D小型車速度補正値(0, tempB) Then
            tempA = D小型車速度補正値(1, tempB)
        End If
    Next
    F速度24S = tempA
    'エラー処理--------
    If tempA = 999 Then
        MsgBox "縦断；F速度24S；速度=" & S速度
    End If
End Function　*/
	}//F速度24S()
	private double F速度24L(double S速度){ //
		double[][] D速度補正値 = new double[1+1][4+1];//Dim  As Double
		double tempA;//Dim  As Double
		int tempB;//Dim  As Long -> intに変更　20200214
		//'速度定義
		D速度補正値[0][ 0] = 40.0;
		D速度補正値[0][ 1] = 50.0;
		D速度補正値[0][ 2] = 60.0;
		D速度補正値[0][ 3] = 70.0;
		D速度補正値[0][ 4] = 80.0;
		//'補正係数定義
		D速度補正値[1][ 0] = 0.91;
		D速度補正値[1][ 1] = 0.95;
		D速度補正値[1][ 2] = 1.0;
		D速度補正値[1][ 3] = 1.06;
		D速度補正値[1][ 4] = 1.13;
		//'補正値決定
		tempA = 999;
		for( tempB = 0 ; tempB <= 4 ; tempB++ ){
			if( S速度 == D速度補正値[0][tempB] ){// Then
				tempA = D速度補正値[1][tempB];
			}//if End If
		}//for Next
		//'エラー処理--------
		if( tempA == 999 ){//Then
			db.debugError("error:A01縦断H20Class:縦断；F速度24L；速度=" + S速度);//MsgBox
			//MsgBox "縦断；F速度24L；速度=" & S速度
		}//if End If
		return tempA;//F速度24L =  
		//End Function*/
/*Private Function F速度24L(S速度 As Long) As Double
    Dim D速度補正値(1, 4) As Double
    Dim tempA As Double
    Dim tempB As Long
    '速度定義
    D速度補正値(0, 0) = 40
    D速度補正値(0, 1) = 50
    D速度補正値(0, 2) = 60
    D速度補正値(0, 3) = 70
    D速度補正値(0, 4) = 80
    '補正係数定義
    D速度補正値(1, 0) = 0.91
    D速度補正値(1, 1) = 0.95
    D速度補正値(1, 2) = 1
    D速度補正値(1, 3) = 1.06
    D速度補正値(1, 4) = 1.13
    '補正値決定
    tempA = 999
    For tempB = 0 To 4
        If S速度 = D速度補正値(0, tempB) Then
            tempA = D速度補正値(1, tempB)
        End If
    Next
    F速度24L = tempA
    'エラー処理--------
    If tempA = 999 Then
        MsgBox "縦断；F速度24L；速度=" & S速度
    End If
End Function*/
	}//F速度24L()
	public double A02速度補正係数L(){
		if( 20 <= GI供用年度 && GI供用年度 <= 24 ){//And Then
			return GD速度補正24L;//A02速度補正係数L =
		}//if
		else if( GI供用年度 == 25 ){//Then
			return 1;//A02速度補正係数L =
		}//else if 
		else{
			db.debugError("error:A01縦断H20Class:勾配；速度補正；供用年度=" + GI供用年度);//MsgBox
			return 998.0; 
			//MsgBox "勾配；速度補正；供用年度=" & GI供用年度
		}//eles End If
/*Public Function A02速度補正係数L() As Double
'---------------------
'目的 速度勾配補正係数の受け渡し　大型車
'日付 080706
'---------------------
Public Function A02速度補正係数L() As Double
    If 20 <= GI供用年度 And GI供用年度 <= 24 Then
        A02速度補正係数L = GD速度補正24L
    ElseIf GI供用年度 = 25 Then
        A02速度補正係数L = 1
    Else
        MsgBox "勾配；速度補正；供用年度=" & GI供用年度
    End If
End Function*/
	}//A02速度補正係数L()
	/*public double A02トンネル延長(){//20200305追記 //20200308コメント:form01で計算
		return GDトンネル延長;
	Public Function A02トンネル延長()
	  A02トンネル延長 = GDトンネル延長
	End Function
	}//A02トンネル延長*/
}//A01縦断H20Class
